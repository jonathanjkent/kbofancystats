d <- d %>% separate(X1, c("away1", "away2"), extra = "drop")
library(blogdown)
library(rmarkdown)
library(tidyverse, quietly = T)
library(rvest)
library(elo)
library(scales)
options(dplyr.summarise.inform=F)
setwd("~/Google Drive/KBO")
## Scrape 2020 Schedule and Results
links <- read_csv("mykboweeks.csv", col_types = cols())
links$date <- as.Date(str_sub(links$url,-10,-1))
links <- links %>% filter(date < (Sys.Date()+1))
links <- links$url
all.results <- NA
for (i in links){
print(i)
url <- i
week <- substring(url, first = 38)
d <- read_html(url) %>% html_table() %>% as.data.frame() %>% select(-X2, -X4)
d <- d[2:(nrow(d)-1),]
d <- d %>% filter(str_detect(X1, "2020") == F)
d <- d %>% separate(X1, c("away1", "away2"), extra = "drop")
d <- d %>% separate(X5, c("home1", "home2"), extra = "drop")
d <- d %>% separate(X3, c("A.Score", "H.Score"), extra = "drop")
d$Away <- paste(d$away1, d$away2)
d$Home <- paste(d$home1, d$home2)
d$week <- as.Date(week)
d$Year <- 2020
d$addday <- rep(0:6, each = 5, length.out = nrow(d))
d$Date <- as.Date(d$week + d$addday)
results <- d %>% filter(!str_detect(H.Score, "0am") & !str_detect(A.Score, "Canceled")) %>% select(Date, Home, Away, H.Score, A.Score, Year)
all.results <- rbind(all.results, results)
}
all.results <- all.results[2:nrow(all.results),]
# FutStat.cat
source("~/Google Drive/Futbol/futstat.R")
# FutStat.cat
source("~/Google Drive/Futbol/futstat.R")
suppressMessages(library(blogdown))
suppressMessages(library(rmarkdown))
setwd("~/kbofancystats")
stop_server()
serve_site()
suppressMessages(library(dplyr))
suppressMessages(library(readr))
suppressMessages(library(readr))
suppressMessages(library(ggplot2))
suppressMessages(library(plotly))
tenteam <- suppressMessages(read_csv("~/Google Drive/KBO/elohistory.csv"))
tenteam <- tenteam %>% subset(Date > ISOdate(2013,1,1))
plot <- ggplot() + geom_line(data = tenteam, aes(Date, Elo, color = Team)) + theme_minimal()
plot2 <- ggplotly(plot, width=875, height=600)
plot2 <- config(plot2, displayModeBar = FALSE)
plot2
suppressMessages(library(blogdown))
suppressMessages(library(rmarkdown))
# Start site
setwd("~/futstatcat")
serve_site()
print(tail(read.csv("~/Google Drive/Futbol/updateinfo.csv")))
# KBO Fancy Stats
source("~/Google Drive/KBO/2020elo.R")
source("~/Google Drive/Futbol/c19update.R")
source("~/Google Drive/KBO/2020stats.R")
source("~/Google Drive/KBO/2020stats.R")
source("~/Google Drive/KBO/2020stats.R")
source("~/Google Drive/KBO/2020stats.R")
source("~/Google Drive/Futbol/c19update.R")
source("~/Google Drive/Futbol/c19update.R")
data <- read_csv("https://analisi.transparenciacatalunya.cat/api/views/xuwf-dxjd/rows.csv", col_types = cols())
data$date <- as.Date(data$TipusCasData, format = "%d/%m/%Y")
cat <- data %>% filter(TipusCasDescripcio == "Positiu PCR") %>% filter(!RegioSanitariaDescripcio == "No classificat") %>% group_by(date) %>% summarise(cases = sum(NumCasos))
zeros <- data.frame(c(as.Date("2020-02-20"),as.Date("2020-02-21"),as.Date("2020-02-22"),as.Date("2020-02-23"),as.Date("2020-02-24"),as.Date("2020-02-25"),as.Date("2020-02-26"),as.Date("2020-02-27"),as.Date("2020-03-01"),as.Date("2020-03-03")))
zeros$cases <- 0
names(zeros) <- names(cat)
cat <- rbind(zeros, cat)
cat <- cat %>% arrange(date) %>% mutate(casos = frollmean(cases, 7)) %>% na.exclude()
cat <- cat[2:nrow(cat),]
pt2 <- cat %>% filter(date > as.Date("2020-06-18"))
pt2$casos <- pt2$casos - min(pt2$casos)
pt2$date <- pt2$date - (min(pt2$date)-min(cat$date))
pt2 <- pt2 %>% select(-cases) %>% mutate(wave = 'Since Start of "New Normal"')
cat <- cat %>% select(-cases) %>% mutate(wave = "Since First Confirmed Case")
cat <- cat[1:nrow(pt2),]
both <- rbind(cat,pt2)
both$date <- as.numeric(both$date-min(both$date))
ggplot(both) + geom_line(aes(date, casos, color = wave)) + theme_minimal() + labs(x = "Days", y = "Rolling Average of New Cases", color = "") + theme(axis.text.y=element_blank(),axis.ticks.x=element_blank()) + theme(legend.position="bottom")
View(cat)
library(tidyverse)
library(data.table)
library(tidyverse)
library(data.table)
data <- read_csv("https://analisi.transparenciacatalunya.cat/api/views/xuwf-dxjd/rows.csv", col_types = cols())
data$date <- as.Date(data$TipusCasData, format = "%d/%m/%Y")
cat <- data %>% filter(TipusCasDescripcio == "Positiu PCR") %>% filter(!RegioSanitariaDescripcio == "No classificat") %>% group_by(date) %>% summarise(cases = sum(NumCasos))
zeros <- data.frame(c(as.Date("2020-02-20"),as.Date("2020-02-21"),as.Date("2020-02-22"),as.Date("2020-02-23"),as.Date("2020-02-24"),as.Date("2020-02-25"),as.Date("2020-02-26"),as.Date("2020-02-27"),as.Date("2020-03-01"),as.Date("2020-03-03")))
zeros$cases <- 0
names(zeros) <- names(cat)
cat <- rbind(zeros, cat)
cat <- cat %>% arrange(date) %>% mutate(casos = frollmean(cases, 7)) %>% na.exclude()
cat <- cat[2:nrow(cat),]
pt2 <- cat %>% filter(date > as.Date("2020-06-18"))
pt2$casos <- pt2$casos - min(pt2$casos)
pt2$date <- pt2$date - (min(pt2$date)-min(cat$date))
pt2 <- pt2 %>% select(-cases) %>% mutate(wave = 'Since Start of "New Normal"')
cat <- cat %>% select(-cases) %>% mutate(wave = "Since First Confirmed Case")
cat <- cat[1:nrow(pt2),]
both <- rbind(cat,pt2)
both$date <- as.numeric(both$date-min(both$date))
ggplot(both) + geom_line(aes(date, casos, color = wave)) + theme_minimal() + labs(x = "Days", y = "Rolling Average of New Cases", color = "") + theme(axis.text.y=element_blank(),axis.ticks.x=element_blank()) + theme(legend.position="bottom")
d <- read_csv("~/Downloads/charts.csv")
View(d)
rm(d$X1)
d <- read_csv("~/Downloads/charts.csv") %>% select(-X1)
d <- read_csv("~/Downloads/charts.csv") %>% select(-X1) %>% pivot_longer(c("physmean", "intelmean", "socmean", "metmean", "toolmean"), names_to = "indicator", values_to = "mean")
View(d)
str_sub(d$indicator, 1, -4)
str_sub(d$indicator, 1, -5)
d <- read_csv("~/Downloads/charts.csv") %>% select(-X1) %>% pivot_longer(c("physmean", "intelmean", "socmean", "metmean", "toolmean"), names_to = "indicator", values_to = "mean") %>% str_sub(indicator, 1, -5)
View(d)
d <- read_csv("~/Downloads/charts.csv") %>% select(-X1) %>% pivot_longer(c("physmean", "intelmean", "socmean", "metmean", "toolmean"), names_to = "indicator", values_to = "mean")
d$indicator <- str_sub(d$indicator, 1, -5)
ggplot(d, aes(syear,mean, color = indicator)) + geom_point() + geom_line()
data <- read_csv("https://analisi.transparenciacatalunya.cat/api/views/xuwf-dxjd/rows.csv", col_types = cols())
data$date <- as.Date(data$TipusCasData, format = "%d/%m/%Y")
cat <- data %>% filter(TipusCasDescripcio == "Positiu PCR") %>% group_by(date) %>% summarise(cases = sum(NumCasos))
View(cat)
View(data)
summary(as.factor(data$TipusCasDescripcio))
cat <- data %>% filter(!TipusCasDescripcio == "Sospitós") %>% group_by(date) %>% summarise(cases = sum(NumCasos))
View(cat)
pcr <- data %>% filter(TipusCasDescripcio == "Positiu PCR") %>% group_by(date) %>% summarise(cases = sum(NumCasos))
elisa <- data %>% filter(TipusCasDescripcio == "Positiu per ELISA") %>% group_by(date) %>% summarise(cases = sum(NumCasos))
pcr <- data %>% filter(TipusCasDescripcio == "Positiu PCR") %>% group_by(date) %>% summarise(pcr = sum(NumCasos))
elisa <- data %>% filter(TipusCasDescripcio == "Positiu per ELISA") %>% group_by(date) %>% summarise(elisa = sum(NumCasos))
rapid <- data %>% filter(TipusCasDescripcio == "Positiu per Test Ràpid") %>% group_by(date) %>% summarise(rapid = sum(NumCasos))
epi <- data %>% filter(TipusCasDescripcio == "Epidemiològic") %>% group_by(date) %>% summarise(epi = sum(NumCasos))
sos <- data %>% filter(TipusCasDescripcio == "Sospitós") %>% group_by(date) %>% summarise(sos = sum(NumCasos))
all <- pcr %>% left_join(elisa, by = "date")
all <- pcr %>%
left_join(elisa, by = "date") %>%
left_join(rapid, by = "date") %>%
left_join(epi, by = "date") %>%
left_join(sos, by = "date")
View(all)
sum(all$pcr)
sum(all$rapid)
sum(all$rapid, na.rm=T)
all$tests <- all$pcr + all$elisa + all$rapid + all$epi
sum(all$tests)
sum(all$tests, na.rm = T)
all$tests <- sum(all$pcr,all$elisa,all$rapid,all$epi, na.rm = T)
sum(all$tests, na.rm = T)
sum(all$epi, na.rm = T)
sum(all$elisa, na.rm = T)
sum(all$pcr, na.rm = T)
sum(all$rapid, na.rm = T)
all$tests <- sum(all$pcr,all$elisa,all$rapid,all$epi, na.rm = T)
sum(all$tests, na.rm = T)
6632+63775+3015+4433
all$testrate <- all$pcr/all$sos
ggplot(all,aes(date,testrate)) + geom_point() + geom_line()
p <- ggplot(all,aes(date,testrate)) + geom_point() + geom_line()
p <- ggplot(all,aes(date,testrate), color = "red") + geom_point() + geom_line()
p
p <- ggplot(all,aes(date,testrate)) + geom_point(color = "red") + geom_line(color = "red")
p
plotly(p)
library(ggplotly)
ggplotly(p)
library(plotly)
ggplotly(p)
p <- ggplot(all,aes(date,sos)) + geom_point(color = "red") + geom_line(color = "red")
p
p <- ggplot(all,aes(date,sos)) + geom_smooth()
p
library(tidyverse)
library(data.table)
library(plotly)
data <- read_csv("https://analisi.transparenciacatalunya.cat/api/views/xuwf-dxjd/rows.csv", col_types = cols())
data$date <- as.Date(data$TipusCasData, format = "%d/%m/%Y")
cat <- data %>% filter(TipusCasDescripcio == "Positiu PCR") %>% group_by(date) %>% summarise(cases = sum(NumCasos))
zeros <- data.frame(c(as.Date("2020-02-20"),as.Date("2020-02-21"),as.Date("2020-02-22"),as.Date("2020-02-23"),as.Date("2020-02-24"),as.Date("2020-02-25"),as.Date("2020-02-26"),as.Date("2020-02-27"),as.Date("2020-03-01"),as.Date("2020-03-03")))
zeros$cases <- 0
names(zeros) <- names(cat)
cat <- rbind(zeros, cat)
cat <- cat %>% arrange(date) %>% mutate(casos = frollmean(cases, 7)) %>% na.exclude()
cat <- cat[2:nrow(cat),]
pt2 <- cat %>% filter(date > as.Date("2020-06-18"))
pt2$casos <- pt2$casos - min(pt2$casos)
pt2$date <- pt2$date - (min(pt2$date)-min(cat$date))
pt2 <- pt2 %>% select(-cases) %>% mutate(wave = 'Since Start of "New Normal"')
cat <- cat %>% select(-cases) %>% mutate(wave = "Since First Confirmed Case")
cat <- cat[1:nrow(pt2),]
both <- rbind(cat,pt2)
both$date <- as.numeric(both$date-min(both$date))
ggplot(both) + geom_line(aes(date, casos, color = wave)) + theme_minimal() + labs(x = "Days", y = "Rolling Average of New Cases", color = "") + theme(axis.text.y=element_blank(),axis.ticks.x=element_blank()) + theme(legend.position="bottom")
#pcr <- data %>% filter(TipusCasDescripcio == "Positiu PCR") %>% group_by(date) %>% summarise(pcr = sum(NumCasos))
#elisa <- data %>% filter(TipusCasDescripcio == "Positiu per ELISA") %>% group_by(date) %>% summarise(elisa = sum(NumCasos))
#rapid <- data %>% filter(TipusCasDescripcio == "Positiu per Test Ràpid") %>% group_by(date) %>% summarise(rapid = sum(NumCasos))
#epi <- data %>% filter(TipusCasDescripcio == "Epidemiològic") %>% group_by(date) %>% summarise(epi = sum(NumCasos))
#sos <- data %>% filter(TipusCasDescripcio == "Sospitós") %>% group_by(date) %>% summarise(sos = sum(NumCasos))
#all <- pcr %>% left_join(elisa, by = "date") %>% left_join(rapid, by = "date") %>% left_join(epi, by = "date") %>% left_join(sos, by = "date")
#all$testrate <- all$pcr/all$sos
source("~/Google Drive/Futbol/c19update.R")
496+14+178+9
## Updates
# KBO Fancy Stats
source("~/Google Drive/KBO/2020elo.R")
source("~/Google Drive/KBO/2020stats.R")
## Updates
# KBO Fancy Stats
source("~/Google Drive/KBO/2020elo.R")
source("~/Google Drive/KBO/2020stats.R")
# FutStat.cat
source("~/Google Drive/Futbol/futstat.R")
source("~/Google Drive/Futbol/c19update.R")
suppressMessages(library(blogdown))
suppressMessages(library(rmarkdown))
suppressMessages(library(tidyverse))
suppressMessages(library(rvest))
suppressMessages(library(elo))
suppressMessages(library(scales))
setwd("~/kbofancystats")
stop_server()
serve_site()
suppressMessages(library(dplyr))
suppressMessages(library(readr))
suppressMessages(library(ggplot2))
suppressMessages(library(plotly))
tenteam <- suppressMessages(read_csv("~/Google Drive/KBO/elohistory.csv"))
View(tenteam)
tenteam <- tenteam %>% suppressMessages(subset(Date > ISOdate(2020,5,4)))
tenteam <- tenteam %>% suppressMessages(subset(Date > as.Date("2020-05-04")))
tenteam <- tenteam %>% subset(Date > as.Date("2020-05-04"))
tenteam <- suppressMessages(read_csv("~/Google Drive/KBO/elohistory.csv"))
tenteam <- tenteam %>% suppressMessages(subset(Date > as.Date("2020-05-04")))
tenteam <- tenteam %>% subset(Date > as.Date("2020-05-04"))
View(tenteam)
tenteam <- suppressMessages(read_csv("~/Google Drive/KBO/elohistory.csv"))
View(tenteam)
tenteam <- tenteam[10014:nrow(tenteam),]
tenteam <- suppressMessages(read_csv("~/Google Drive/KBO/elohistory.csv"))
View(tenteam)
suppressMessages(library(blogdown))
suppressMessages(library(rmarkdown))
suppressMessages(library(tidyverse))
suppressMessages(library(rvest))
suppressMessages(library(elo))
suppressMessages(library(scales))
options(dplyr.summarise.inform=F)
setwd("~/Google Drive/KBO")
## Scrape 2020 Schedule and Results
links <- read_csv("mykboweeks.csv", col_types = cols())
links$date <- as.Date(str_sub(links$url,-10,-1))
links <- links %>% filter(date < (Sys.Date()+1))
links <- links$url
all.results <- NA
for (i in links){
print(paste0("Scraping: ",i))
url <- i
week <- substring(url, first = 38)
d <- read_html(url) %>% html_table() %>% as.data.frame() %>% select(-X2, -X4)
d <- d[2:(nrow(d)-1),]
d <- d %>% filter(str_detect(X1, "2020") == F)
d <- d %>% separate(X1, c("away1", "away2"), extra = "drop")
d <- d %>% separate(X5, c("home1", "home2"), extra = "drop")
d <- d %>% separate(X3, c("A.Score", "H.Score"), extra = "drop")
d$Away <- paste(d$away1, d$away2)
d$Home <- paste(d$home1, d$home2)
d$week <- as.Date(week)
d$Year <- 2020
d$addday <- rep(0:6, each = 5, length.out = nrow(d))
d$Date <- as.Date(d$week + d$addday)
results <- d %>% filter(!str_detect(H.Score, "0am") & !str_detect(A.Score, "Canceled")) %>% select(Date, Home, Away, H.Score, A.Score, Year)
all.results <- rbind(all.results, results)
}
all.results <- all.results[2:nrow(all.results),]
## Build complete set of 720 games
all.schedule <- as.data.frame(rep(unique(all.results$Home), each = 10))
all.schedule$Away <- rep(unique(all.results$Home), times = 10)
colnames(all.schedule)[1] <- "Home"
all.schedule <- all.schedule %>% filter(Home != Away)
all.schedule <- data.frame(all.schedule, Matchup = rep(1:8, each = 90))
all.schedule$key <- paste(all.schedule$Home,all.schedule$Away,all.schedule$Matchup)
## Remove Completed Games
completed <- data.frame(paste(all.results$Home,all.results$Away))
colnames(completed)[1] <- "Matchup"
completed <- completed %>% group_by(Matchup) %>% mutate(key=row_number())
completed$Matchup <- paste(completed$Matchup,completed$key)
completed <- as.character(completed$Matchup)
all.schedule <- all.schedule %>% filter(!key %in% completed) %>% select(Home, Away)
## Tally Current Win Totals
all.results$H.Score <- as.numeric(all.results$H.Score)
all.results$A.Score <- as.numeric(all.results$A.Score)
all.results <- mutate(all.results, H.Win = ifelse(H.Score > A.Score, 1,
ifelse(H.Score == A.Score, .5, 0)))
all.results <- mutate(all.results, A.Win = ifelse(H.Score < A.Score, 1,
ifelse(H.Score == A.Score, .5, 0)))
h.wins <- all.results %>% select(Home, H.Win)
names(h.wins) <- c("Winner", "n")
a.wins <- all.results %>% select(Away, A.Win)
names(a.wins) <- c("Winner", "n")
wins <- rbind(h.wins,a.wins)
wins <- wins %>% group_by(Winner) %>% summarize(n = sum(n))
all.results <- all.results %>% select(-H.Win, -A.Win)
## Read In Historical Results
kbohistory <- read_csv("kboresults.csv", col_types = cols())
kbohistory$Date <- ISOdate(kbohistory$Year, kbohistory$Month, kbohistory$Day)
kbohistory <- kbohistory %>% select(Date, Home, Away, H.Score, A.Score, Year)
all.history <- rbind(kbohistory, all.results)
all.history <- all.history[order(all.history$Date),]
all.history$H.Score <- as.double(all.history$H.Score)
all.history$A.Score <- as.double(all.history$A.Score)
## Run Elo
print("Running model...")
elo <- elo.run(score(H.Score, A.Score) ~ adjust(Home, 24) + Away + regress(Year, 1500, 0.5) + k(4*(abs(H.Score - A.Score)^(1/4))), data = all.history)
all.history$H.Elo <- elo[[1]][,7]
all.history$A.Elo <- elo[[1]][,8]
## Create Elo History Table
home <- all.history %>% select(Date, Home, H.Elo)
away <- all.history %>% select(Date, Away, A.Elo)
cols <- c("Date", "Team", "Elo")
colnames(home) <- cols
colnames(away) <- cols
elo.history <- rbind(home,away)
elo.history$Elo <- round(elo.history$Elo, digits = 0)
## Current Elos
current.elos <- elo.history %>%
group_by(Team) %>%
arrange(desc(Date)) %>%
slice(1) %>% select(-Date) %>%
arrange(desc(Elo))
current.elos$Rank <- 1:10
write_csv(current.elos, "currentelos.csv")
View(elo.history)
## Ten Team Era for History Page
elo.history$Date <- as.Date(elo.history$Date)
View(elo.history)
tenteam <- elo.history %>% filter(Date > as.Date("2013-01-01"))
View(tenteam)
write_csv(tenteam,"elohistory.csv")
# KBO Fancy Stats
source("~/Google Drive/KBO/2020elo.R")
source("~/Google Drive/KBO/2020stats.R")
suppressMessages(library(dplyr))
suppressMessages(library(readr))
suppressMessages(library(kableExtra))
batters <- suppressMessages(read_csv("~/Google Drive/KBO/batters_simple.csv", col_types = cols()))
batters <- batters[complete.cases(batters),]
batters$Age <- as.numeric(batters$Age)
d <- batters %>% filter(Team == "SK Wyverns") %>% filter(Year == "2020") %>% select(-Team, -Year, -KName, -Url)
d <- d[order(-d$WAR),]
d$Name <- paste0("[", d$Name, "](/players/", d$Code, ")")
d <- d %>% select(-Code)
kable(d, digits = c(0,0,0,0,0,0,3,1,1,3,3,1,2), col.names = c("Name","Age","Pos","G","PA","HR","OPS","BB%","SO%","ISO","BABIP","wRC+","WAR")) %>% kable_styling(bootstrap_options = c("striped", "hover"), fixed_thead = T) %>%column_spec(1, bold = T, border_right = F)
pitchers <- suppressMessages(read_csv("~/Google Drive/KBO/pitchers_simple.csv", col_types = cols()))
pitchers <- pitchers[complete.cases(pitchers),]
d <- pitchers %>% filter(Team == "SK Wyverns") %>% filter(Year == "2020") %>% select(-Team, -Year, -KName, -Position, -Url)
d <- d[order(-d$WAR),]
d$Name <- paste0("[", d$Name, "](/players/", d$Code, ")")
d <- d %>% select(-Code)
kable(d, digits = c(0,0,0,0,1,1,1,1,3,3,2,2), col.names = c("Name","Age","G","GS","IP","K/9","BB/9","HR/9","BABIP","ERA","FIP","WAR")) %>% kable_styling(bootstrap_options = c("striped", "hover"), fixed_thead = T) %>% column_spec(1, bold = T, border_right = F)
batters <- read.csv("~/Google Drive/KBO/batters_simple.csv")
batters <- batters[complete.cases(batters),]
batters$Age <- as.numeric(batters$Age)
d <- batters %>% filter(Team == "SK Wyverns") %>% filter(Year == "2020") %>% select(-Team, -Year, -KName, -Url)
d <- d[order(-d$WAR),]
d$Name <- paste0("[", d$Name, "](/players/", d$Code, ")")
d <- d %>% select(-Code)
kable(d, digits = c(0,0,0,0,0,0,3,1,1,3,3,1,2), col.names = c("Name","Age","Pos","G","PA","HR","OPS","BB%","SO%","ISO","BABIP","wRC+","WAR")) %>% kable_styling(bootstrap_options = c("striped", "hover"), fixed_thead = T) %>%column_spec(1, bold = T, border_right = F)
View(d)
serve_site()
batters <- read_csv("~/Google Drive/KBO/batters_simple.csv")
batters
batters <- read_csv("~/Google Drive/KBO/batters_simple.csv", col_types = cols(.default = "?", Year = "c")))
batters <- read_csv("~/Google Drive/KBO/batters_simple.csv", col_types = cols(.default = "?", Year = "c"))
pitchers <- read_csv("~/Google Drive/KBO/pitchers_simple.csv", col_types = cols(.default = "?", Year = "c", Age = "c"))
suppressMessages(library(dplyr))
suppressMessages(library(readr))
suppressMessages(library(kableExtra))
batters <- read_csv("~/Google Drive/KBO/batters_simple.csv", col_types = cols(.default = "?", Year = "c", Age = "c"))
batters <- batters[complete.cases(batters),]
batters$Age <- as.numeric(batters$Age)
d <- batters %>% filter(Team == "SK Wyverns") %>% filter(Year == "2020") %>% select(-Team, -Year, -KName, -Url)
d <- d[order(-d$WAR),]
d$Name <- paste0("[", d$Name, "](/players/", d$Code, ")")
d <- d %>% select(-Code)
kable(d, digits = c(0,0,0,0,0,0,3,1,1,3,3,1,2), col.names = c("Name","Age","Pos","G","PA","HR","OPS","BB%","SO%","ISO","BABIP","wRC+","WAR")) %>% kable_styling(bootstrap_options = c("striped", "hover"), fixed_thead = T) %>%column_spec(1, bold = T, border_right = F)
pitchers <- read_csv("~/Google Drive/KBO/pitchers_simple.csv", col_types = cols(.default = "?", Year = "c", Age = "c"))
pitchers <- pitchers[complete.cases(pitchers),]
d <- pitchers %>% filter(Team == "SK Wyverns") %>% filter(Year == "2020") %>% select(-Team, -Year, -KName, -Position, -Url)
d <- d[order(-d$WAR),]
d$Name <- paste0("[", d$Name, "](/players/", d$Code, ")")
d <- d %>% select(-Code)
kable(d, digits = c(0,0,0,0,1,1,1,1,3,3,2,2), col.names = c("Name","Age","G","GS","IP","K/9","BB/9","HR/9","BABIP","ERA","FIP","WAR")) %>% kable_styling(bootstrap_options = c("striped", "hover"), fixed_thead = T) %>% column_spec(1, bold = T, border_right = F)
View(d)
suppressMessages(library(dplyr))
suppressMessages(library(readr))
suppressMessages(library(kableExtra))
batters <- read_csv("~/Google Drive/KBO/batters_simple.csv", col_types = cols(.default = "?", Year = "c", Age = "c"))
batters <- batters[complete.cases(batters),]
batters$Age <- as.numeric(batters$Age)
d <- batters %>% filter(Team == "SK Wyverns") %>% filter(Year == "2020") %>% select(-Team, -Year, -KName, -Url)
d <- d[order(-d$WAR),]
d$Name <- paste0("[", d$Name, "](/players/", d$Code, ")")
d <- d %>% select(-Code)
kable(d, digits = c(0,0,0,0,0,0,3,1,1,3,3,1,2), col.names = c("Name","Age","Pos","G","PA","HR","OPS","BB%","SO%","ISO","BABIP","wRC+","WAR")) %>% kable_styling(bootstrap_options = c("striped", "hover"), fixed_thead = T) %>%column_spec(1, bold = T, border_right = F)
View(d)
suppressMessages(library(tidyverse))
suppressMessages(library(rvest))
suppressMessages(library(blogdown))
suppressMessages(library(rmarkdown))
suppressMessages(library(scales))
## Write and Update Pages
print("Updating pages...")
setwd("~/kbofancystats/content/teams")
batters <- read_csv("~/Google Drive/KBO/batters_simple.csv", col_types = cols())
pitchers <- read_csv("~/Google Drive/KBO/pitchers_simple.csv", col_types = cols())
list <- batters %>% filter(Year == "2020") %>% select(Team)
list <- unique(list$Team)
batleaders <- batters %>% select(Name, Position, WAR, Year, Team)
pitleaders <- pitchers %>% select(Name, Position, WAR, Year, Team)
leaders <- rbind(batleaders, pitleaders)
tops <- leaders %>% filter(Year == "2020") %>% group_by(Team) %>% top_n(3, WAR)
tops <- tops[order(-tops$WAR),]
tops$WAR <- round(tops$WAR, 2)
current.elos <- read_csv("~/Google Drive/KBO/currentelos.csv", col_types = cols())
current.elos$Elo <- round(current.elos$Elo, 0)
cities <- read_csv("~/Google Drive/KBO/teamcities.csv", col_types = cols())
tops <- tops %>% left_join(cities, by = "Team")
for (i in list){
top <- tops %>% filter(Team == i)
top3 <- paste0("WAR Leader | ",top[1,1],", ",top[1,2],": ",top[1,3])
elo <- current.elos %>% filter(Team == i)
elo <- paste0(top[1,6]," | Current Elo: ",elo[1,2]," (",elo[1,3],")")
a <- "---"
b <- 'date: "2020-03-31"'
c <- paste0("summary: ","'", top3,"'")
d <- paste0("title: ","'", i,"'")
da <- paste0("subtitle: ","'", elo,"'")
db <- "image:"
dc <- "  preview_only: true"
ea <- "**2020** | [Batting](#batting) | [Pitching](#pitching) | "
eaa <- paste0("**2019** | [Batting](https://www.kbofancystats.com/2019-stats/", gsub("[[:space:]]", "", i),"/#batting) | [Pitching](https://www.kbofancystats.com/2019-stats/",gsub("[[:space:]]", "", i),"/#pitching) | ")
eb <- " "
e <- "### 2020 Batting Stats {#batting}"
f <- "```{r pressure, echo=F,warning=FALSE,message=FALSE}"
g <- "suppressMessages(library(dplyr))"
g2 <- "suppressMessages(library(readr))"
j <- "suppressMessages(library(kableExtra))"
k <- 'batters <- suppressMessages(read_csv("~/Google Drive/KBO/batters_simple.csv", col_types = cols(.default = "?", Year = "c", Age = "c")))'
l <- "batters <- batters[complete.cases(batters),]"
m <- "batters$Age <- as.numeric(batters$Age)"
n <- paste0('d <- batters %>% filter(Team == "', i, '") %>% filter(Year == "2020") %>% select(-Team, -Year, -KName, -Url)')
o <- "d <- d[order(-d$WAR),]"
p <- 'd$Name <- paste0("[", d$Name, "](/players/", d$Code, ")")'
q <- 'kable(d, digits = c(0,0,0,0,0,0,3,1,1,3,3,1,2), col.names = c("Name","Age","Pos","G","PA","HR","OPS","BB%","SO%","ISO","BABIP","wRC+","WAR")) %>% kable_styling(bootstrap_options = c("striped", "hover"), fixed_thead = T) %>%column_spec(1, bold = T, border_right = F)'
r <- "```"
rr <- "***"
s <- "### 2020 Pitching Stats {#pitching}"
t <- "```{r, echo=F,warning=FALSE,message=FALSE}"
u <- 'pitchers <- suppressMessages(read_csv("~/Google Drive/KBO/pitchers_simple.csv", col_types = cols(.default = "?", Year = "c", Age = "c")))'
v <- 'pitchers <- pitchers[complete.cases(pitchers),]'
w <- paste0('d <- pitchers %>% filter(Team == "', i, '") %>% filter(Year == "2020") %>% select(-Team, -Year, -KName, -Position, -Url)')
x <- 'd <- d[order(-d$WAR),]'
y <- 'd$Name <- paste0("[", d$Name, "](/players/", d$Code, ")")'
ab <- "d <- d %>% select(-Code)"
z <- 'kable(d, digits = c(0,0,0,0,1,1,1,1,3,3,2,2), col.names = c("Name","Age","G","GS","IP","K/9","BB/9","HR/9","BABIP","ERA","FIP","WAR")) %>% kable_styling(bootstrap_options = c("striped", "hover"), fixed_thead = T) %>% column_spec(1, bold = T, border_right = F)'
teamwd <- paste0("~/kbofancystats/content/teams/",gsub("[[:space:]]", "", i))
setwd(teamwd)
file <- "index.rmd"
writeLines(c(a,b,c,d,da,db,dc,a,ea,eb,rr,e,f,g,g2,j,k,l,m,n,o,p,ab,q,r,rr,s,t,u,v,w,x,y,ab,z,r), file)
}
suppressMessages(library(tidyverse))
suppressMessages(library(rvest))
suppressMessages(library(blogdown))
suppressMessages(library(rmarkdown))
suppressMessages(library(scales))
options(dplyr.summarise.inform=F)
setwd("~/Google Drive/KBO")
## Blank Data Sets
pitchers <- NA
batters <- NA
## List of recent games
game.links <- read_html("https://mykbostats.com/") %>%  html_nodes("a") %>% html_attr("href")
game.links <- game.links[str_detect(game.links, "games")]
game.links <- game.links[2:length(game.links)]
## Add Park Factors
pf <- read_csv("parkfactors.csv", col_types = cols())
## Guts
guts <- read_csv("guts.csv", col_types = cols())
## Combine with Un-Updated 2020
batnoupdate <- read_csv("batters_full_20.csv", col_types = cols())
pitnoupdate <- read_csv("pitchers_full_20.csv", col_types = cols())
### Since 2019
batters <- read_csv("batters_full_20.csv", col_types = cols())
pitchers <- read_csv("pitchers_full_20.csv", col_types = cols())
batters19 <- read_csv("batrawstat.csv", col_types = cols())
pitchers19 <- read_csv("pitrawstat.csv", col_types = cols())
## Combine With Pre-2020 Stats
batters.1019 <- read_csv("batters_simple_10to19.csv", col_types = cols())
pitchers.1019 <- read_csv("pitchers_simple_10to19.csv", col_types = cols())
batters <- read_csv("~/Google Drive/KBO/batters_simple.csv", col_types = cols(.default = "?", Year = "c", Age = "c"))
pitchers <- read_csv("~/Google Drive/KBO/pitchers_simple.csv", col_types = cols(.default = "?", Year = "c", Age = "c"))
setwd("~/kbofancystats")
stop_server()
serve_site()
source("~/Documents/wavecomparison.R")
ggplot(both) + geom_line(aes(date, casos, color = wave)) + theme_minimal() + labs(x = "Days", y = "Rolling Average of New Cases", color = "") + theme(axis.text.y=element_blank(),axis.ticks.x=element_blank()) + theme(legend.position="bottom")
source("~/Documents/wavecomparison.R")
