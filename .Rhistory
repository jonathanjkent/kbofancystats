library(ggplot2)
# Load background track data
bgtracks <- read_csv("~/research/data/exp_raw/tigaserver_app_fix.csv")
# Randomize location within sampling cell
bgtracks$fake_lon <- bgtracks$masked_lon + runif(nrow(bgtracks), 0, .025)
bgtracks$fake_lat <- bgtracks$masked_lat + runif(nrow(bgtracks), 0, .025)
# Convert points to SF objects
bgtracks <- bgtracks %>% st_as_sf(coords = c("fake_lon", "fake_lat"), crs = "+proj=longlat +ellps=WGS84 +datum=WGS84")
# Load districts as SF objects
districts <- st_read("~/research/shapefiles/SECC_CPV_E_20111101_01_R_INE.shp")
districts <- st_transform(districts, "+proj=longlat +ellps=WGS84 +datum=WGS84")
# Add background track count to district data
districts$bt_count <- lengths(st_intersects(districts, bgtracks))
# Load tweets, add tweet count to district data
tweets <- readRDS("~/research/sfm_export_b4f78871b13d4773a0bcde6cb2c348db.rds")
tweets <- tweets %>% st_as_sf(coords = c("lon", "lat"), crs = "+proj=longlat +ellps=WGS84 +datum=WGS84")
View(districts)
districts$tw_count <- lengths(st_intersects(districts, tweets))
# Background tracks and tweets as proportion
districts$bt_pct <- districts$bt_count/sum(districts$bt_count)
districts$tw_pct <- districts$tw_count/sum(districts$tw_count)
districts$more_tweets <- districts$tw_pct - districts$bt_pct
# Load and add income data to district data
income <- read_csv("~/research/incomebybarri.csv")
income$renta_persona <- as.numeric(income$renta_persona)
income$renta_hogar <- as.numeric(income$renta_hogar)
income <- income %>% separate(area, c("CUSEC", "NMUN2"))
districts <- districts %>% left_join(income, by = "CUSEC")
# Collapse by community or municipality
#communities <- st_make_valid(districts) %>% group_by(NCA) %>% summarise(bt_count = sum(bt_count)) %>% arrange(desc(obs))
municipalities <- st_make_valid(districts) %>% group_by(NMUN) %>% summarise(bt_count = sum(bt_count)) %>% summarise(tw_count = sum(tw_count))
municipalities <- st_make_valid(districts) %>% group_by(NMUN) %>% summarise(bt_count = sum(bt_count))
munitweets <- st_make_valid(districts) %>% group_by(NMUN) %>% summarise(tw_count = sum(tw_count))
municipalities <- municipalities %>% left_join(munitweets, by = "NMUN")
municipalities <- st_make_valid(districts) %>% group_by(NMUN) %>% summarise_at(vars(bt_count, tw_count), sum)
municipalities
municipalities$bt_pct <- municipalities$bt_count/sum(municipalities$bt_count)
municipalities$tw_pct <- municipalities$tw_count/sum(municipalities$tw_count)
municipalities$more_tweets <- municipalities$tw_pct - municipalities$bt_pct
View(municipalities)
communities <- st_make_valid(districts) %>% group_by(NCA) %>% summarise_at(vars(bt_count, tw_count), sum)
communities$bt_pct <- communities$bt_count/sum(communities$bt_count)
communities$tw_pct <- communities$tw_count/sum(communities$tw_count)
communities$more_tweets <- communities$tw_pct - communities$bt_pct
View(communities)
communities
communities %>% arrange(more_tweets)
municipalities %>% arrange(more_tweets)
# CSV exports
write_csv(communities, "~/research/communities.csv")
write_csv(municipalities, "~/research/municipalities.csv")
municipalities %>% arrange(desc(more_tweets)
)
# Names of all required packages that we will be using during the course
all_pkgs <- c('tidyverse', 'jtools', 'sjPlot','ggplot2','ggthemes','haven','foreign','essurvey','stargazer','knitr','prais','orcutt','fastDummies')
# Install all the packages (it may take a few minutes to install all of them)
install.packages(all_pkgs, dependencies = TRUE)
# Verify the installation worked correctly
setdiff(all_pkgs, row.names(installed.packages()))
library(essurvey)
?essurvey
# FutStat.cat
source("~/Google Drive/Futbol/futstat.R")
source("~/Google Drive/KBO/2020stats.R")
source("~/Google Drive/Futbol/c19update.R")
library(tidyverse)
library(lubridate)
# Read in stats and fix times
swimstats <- read_csv("~/Google Drive/Personal Documents/swimstats.csv")
swimstats$time <- duration(as.numeric(sub("s.*", "", swimstats$time)), "seconds")
swimstats$fast.50 <- duration(as.numeric(sub("s.*", "", swimstats$fast.50)), "seconds")
swimstats$fast.100 <- duration(as.numeric(sub("s.*", "", swimstats$fast.100)), "seconds")
swimstats$fast.200 <- duration(as.numeric(sub("s.*", "", swimstats$fast.200)), "seconds")
# PRs and Totals
pr50 <- swimstats %>% arrange(fast.50) %>% select(date,fast.50)
names(pr50) <- c("date","pr")
pr50 <- pr50[1,]
pr100 <- swimstats %>% arrange(fast.100) %>% select(date,fast.100)
names(pr100) <- c("date","pr")
pr100 <- pr100[1,]
pr200 <- swimstats %>% arrange(fast.200) %>% select(date, fast.200)
names(pr200) <- c("date","pr")
pr200 <- pr200[1,]
pr <- rbind(pr50,pr100,pr200)
pr$category <- c("Fastest 50m","Fastest 100m","Fastest 200m")
pr <- pr %>% select(category, pr,date)
pr$days.since <- Sys.Date() - pr$date
prdist <- swimstats %>% arrange(desc(meters)) %>% select(date,meters)
names(prdist) <- c("date","pr")
prdist <- prdist[1,]
prcont <- swimstats %>% arrange(desc(long)) %>% select(date,long)
names(prcont) <- c("date","pr")
prcont <- prcont[1,]
prspeed <- swimstats %>% arrange(desc(meters.per.sec)) %>% select(date,meters.per.sec)
names(prspeed) <- c("date","pr")
prspeed <- prspeed[1,]
pr2 <- rbind(prdist,prcont,prspeed)
pr2$category <- c("Total Distance","Cont. Distance","Meters/Second")
pr2 <- pr2 %>% select(category, pr,date)
pr2$days.since <- Sys.Date() - pr2$date
pr
pr2
56.5+28.2+30.7
library(tidyverse)
library(lubridate)
# Read in stats and fix times
swimstats <- read_csv("~/Google Drive/Personal Documents/swimstats.csv")
swimstats$time <- duration(as.numeric(sub("s.*", "", swimstats$time)), "seconds")
swimstats$fast.50 <- duration(as.numeric(sub("s.*", "", swimstats$fast.50)), "seconds")
swimstats$fast.100 <- duration(as.numeric(sub("s.*", "", swimstats$fast.100)), "seconds")
swimstats$fast.200 <- duration(as.numeric(sub("s.*", "", swimstats$fast.200)), "seconds")
# Add new swim
newswim <- tibble(as_date("2020-09-28"), # Date
duration(60*54+09, "seconds"), # Time
2125, # Meters
504, # Calories
duration(49, "seconds"), # Fastest 50m Freestyle
duration(60*1+55.4, "seconds"), # Fastest 100m Freestyle
duration(60*4+01.8, "seconds"), # Fastest 200m Freestyle
925, # Longest Continuous Distance
2.69, # Meters Per Stroke (DPS)
3.33) # Seconds Per Stroke (Stroke Rate)
newswim[1,11] <- (newswim[1,9]/newswim[1,10]) # Meters Per Second
swimstats[(nrow(swimstats)+1),] <- newswim
# Overwrite csv
write_csv(swimstats,"~/Google Drive/Personal Documents/swimstats.csv")
# PRs and Totals
pr50 <- swimstats %>% arrange(fast.50) %>% select(date,fast.50)
names(pr50) <- c("date","pr")
pr50 <- pr50[1,]
pr100 <- swimstats %>% arrange(fast.100) %>% select(date,fast.100)
names(pr100) <- c("date","pr")
pr100 <- pr100[1,]
pr200 <- swimstats %>% arrange(fast.200) %>% select(date, fast.200)
names(pr200) <- c("date","pr")
pr200 <- pr200[1,]
pr <- rbind(pr50,pr100,pr200)
pr$category <- c("Fastest 50m","Fastest 100m","Fastest 200m")
pr <- pr %>% select(category, pr,date)
pr$days.since <- Sys.Date() - pr$date
prdist <- swimstats %>% arrange(desc(meters)) %>% select(date,meters)
names(prdist) <- c("date","pr")
prdist <- prdist[1,]
prcont <- swimstats %>% arrange(desc(long)) %>% select(date,long)
names(prcont) <- c("date","pr")
prcont <- prcont[1,]
prspeed <- swimstats %>% arrange(desc(meters.per.sec)) %>% select(date,meters.per.sec)
names(prspeed) <- c("date","pr")
prspeed <- prspeed[1,]
pr2 <- rbind(prdist,prcont,prspeed)
pr2$category <- c("Total Distance","Cont. Distance","Meters/Second")
pr2 <- pr2 %>% select(category, pr,date)
pr2$days.since <- Sys.Date() - pr2$date
pr
pr2
# Plots
#ggplot(swimstats %>% filter(date>as.Date("2020-03-01"))) + geom_point(aes(date,meters.per.sec))
#ggplot(swimstats) + geom_point(aes(calories,meters))
library(tidyverse)
library(lubridate)
# Read in stats and fix times
swimstats <- read_csv("~/Google Drive/Personal Documents/swimstats.csv")
swimstats$time <- duration(as.numeric(sub("s.*", "", swimstats$time)), "seconds")
swimstats$fast.50 <- duration(as.numeric(sub("s.*", "", swimstats$fast.50)), "seconds")
swimstats$fast.100 <- duration(as.numeric(sub("s.*", "", swimstats$fast.100)), "seconds")
swimstats$fast.200 <- duration(as.numeric(sub("s.*", "", swimstats$fast.200)), "seconds")
View(swimstats)
source("~/Google Drive/Futbol/c19update.R")
library(tidyverse)
library(lubridate)
# Read in stats and fix times
swimstats <- read_csv("~/Google Drive/Personal Documents/swimstats.csv")
swimstats$time <- duration(as.numeric(sub("s.*", "", swimstats$time)), "seconds")
swimstats$fast.50 <- duration(as.numeric(sub("s.*", "", swimstats$fast.50)), "seconds")
swimstats$fast.100 <- duration(as.numeric(sub("s.*", "", swimstats$fast.100)), "seconds")
swimstats$fast.200 <- duration(as.numeric(sub("s.*", "", swimstats$fast.200)), "seconds")
pr50 <- swimstats %>% arrange(fast.50) %>% select(date,fast.50)
names(pr50) <- c("date","pr")
pr50 <- pr50[1,]
pr100 <- swimstats %>% arrange(fast.100) %>% select(date,fast.100)
names(pr100) <- c("date","pr")
pr100 <- pr100[1,]
pr200 <- swimstats %>% arrange(fast.200) %>% select(date, fast.200)
names(pr200) <- c("date","pr")
pr200 <- pr200[1,]
pr <- rbind(pr50,pr100,pr200)
pr$category <- c("Fastest 50m","Fastest 100m","Fastest 200m")
pr <- pr %>% select(category, pr,date)
pr$days.since <- Sys.Date() - pr$date
prdist <- swimstats %>% arrange(desc(meters)) %>% select(date,meters)
names(prdist) <- c("date","pr")
prdist <- prdist[1,]
prcont <- swimstats %>% arrange(desc(long)) %>% select(date,long)
names(prcont) <- c("date","pr")
prcont <- prcont[1,]
prspeed <- swimstats %>% arrange(desc(meters.per.sec)) %>% select(date,meters.per.sec)
names(prspeed) <- c("date","pr")
prspeed <- prspeed[1,]
pr2 <- rbind(prdist,prcont,prspeed)
pr2$category <- c("Total Distance","Cont. Distance","Meters/Second")
pr2 <- pr2 %>% select(category, pr,date)
pr2$days.since <- Sys.Date() - pr2$date
print(pr,pr2)
pr$pr <- as.character(pr$pr)
pr2
pr2$pr <- as.character(pr2$pr)
pr <- rbind(pr,pr2)
pr
pr50 <- swimstats %>% arrange(fast.50) %>% select(date,fast.50)
names(pr50) <- c("date","pr")
pr50 <- pr50[1,]
pr100 <- swimstats %>% arrange(fast.100) %>% select(date,fast.100)
names(pr100) <- c("date","pr")
pr100 <- pr100[1,]
pr200 <- swimstats %>% arrange(fast.200) %>% select(date, fast.200)
names(pr200) <- c("date","pr")
pr200 <- pr200[1,]
pr <- rbind(pr50,pr100,pr200)
pr$category <- c("Fastest 50m","Fastest 100m","Fastest 200m")
pr <- pr %>% select(category, pr,date)
pr$days.since <- Sys.Date() - pr$date
prdist <- swimstats %>% arrange(desc(meters)) %>% select(date,meters)
names(prdist) <- c("date","pr")
prdist <- prdist[1,]
prcont <- swimstats %>% arrange(desc(long)) %>% select(date,long)
names(prcont) <- c("date","pr")
prcont <- prcont[1,]
prspeed <- swimstats %>% arrange(desc(meters.per.sec)) %>% select(date,meters.per.sec)
names(prspeed) <- c("date","pr")
prspeed <- prspeed[1,]
pr2 <- rbind(prdist,prcont,prspeed)
pr2$category <- c("Total Distance","Cont. Distance","Meters/Second")
pr2 <- pr2 %>% select(category, pr,date)
pr2$days.since <- Sys.Date() - pr2$date
pr2$vs.today <- 0
pr
pr$vs.today <- 0
pr
pr[1,5]
swimstats
swimstats[nrow(swimstats),5]
pr[1,5] <- swimstats[nrow(swimstats),5] - pr[1,2]
pr$vs.today <- duration(49, "seconds")
pr[1,5] <- swimstats[nrow(swimstats),5] - pr[1,2]
pr
pr[2,5] <- swimstats[nrow(swimstats),6] - pr[2,2]
pr[3,5] <- swimstats[nrow(swimstats),7] - pr[3,2]
pr
pr2
pr2[1,5] <- swimstats[nrow(swimstats),3] - pr2[1,2]
pr2
View(swimstats)
pr2[2,5] <- swimstats[nrow(swimstats),8] - pr2[2,2]
pr2[3,5] <- swimstats[nrow(swimstats),11] - pr2[3,2]
pr$pr <- as.character(pr$pr)
pr2$pr <- as.character(pr2$pr)
pr$vs.today <- as.character(pr$vs.today)
pr2$vs.today <- as.character(pr2$vs.today)
pr <- rbind(pr,pr2)
pr
prdps <- swimstats %>% arrange(desc(meters.per.stroke)) %>% select(date,meters.per.stroke)
names(prdps) <- c("date","pr")
prdps <- prspeed[1,]
prdps <- swimstats %>% arrange(meters.per.stroke) %>% select(date,meters.per.stroke)
names(prdps) <- c("date","pr")
prdps <- prspeed[1,]
prrate <- swimstats %>% arrange(desc(secs.per.stroke)) %>% select(date,secs.per.stroke)
names(prrate) <- c("date","pr")
prrate <- prspeed[1,]
pr2 <- rbind(prdist,prcont,prspeed,prdps,prrate)
pr2$category <- c("Total Distance","Cont. Distance","Meters/Second","DPS","Stroke Rate")
pr50 <- swimstats %>% arrange(fast.50) %>% select(date,fast.50)
names(pr50) <- c("date","pr")
pr50 <- pr50[1,]
pr100 <- swimstats %>% arrange(fast.100) %>% select(date,fast.100)
names(pr100) <- c("date","pr")
pr100 <- pr100[1,]
pr200 <- swimstats %>% arrange(fast.200) %>% select(date, fast.200)
names(pr200) <- c("date","pr")
pr200 <- pr200[1,]
pr <- rbind(pr50,pr100,pr200)
pr$category <- c("Fastest 50m","Fastest 100m","Fastest 200m")
pr <- pr %>% select(category, pr,date)
pr$days.since <- Sys.Date() - pr$date
prdist <- swimstats %>% arrange(desc(meters)) %>% select(date,meters)
names(prdist) <- c("date","pr")
prdist <- prdist[1,]
prcont <- swimstats %>% arrange(desc(long)) %>% select(date,long)
names(prcont) <- c("date","pr")
prcont <- prcont[1,]
prspeed <- swimstats %>% arrange(desc(meters.per.sec)) %>% select(date,meters.per.sec)
names(prspeed) <- c("date","pr")
prspeed <- prspeed[1,]
prdps <- swimstats %>% arrange(meters.per.stroke) %>% select(date,meters.per.stroke)
names(prdps) <- c("date","pr")
prdps <- prspeed[1,]
prrate <- swimstats %>% arrange(desc(secs.per.stroke)) %>% select(date,secs.per.stroke)
names(prrate) <- c("date","pr")
prrate <- prspeed[1,]
pr2 <- rbind(prdist,prcont,prspeed,prdps,prrate)
pr2$category <- c("Total Distance","Cont. Distance","Meters/Second","DPS","Stroke Rate")
pr2 <- pr2 %>% select(category, pr,date)
pr2$days.since <- Sys.Date() - pr2$date
pr$vs.today <- duration(49, "seconds")
pr2$vs.today <- 0
pr[1,5] <- swimstats[nrow(swimstats),5] - pr[1,2]
pr[2,5] <- swimstats[nrow(swimstats),6] - pr[2,2]
pr[3,5] <- swimstats[nrow(swimstats),7] - pr[3,2]
pr2[1,5] <- swimstats[nrow(swimstats),3] - pr2[1,2]
pr2[2,5] <- swimstats[nrow(swimstats),8] - pr2[2,2]
pr2[3,5] <- swimstats[nrow(swimstats),11] - pr2[3,2]
pr2[4,5] <- swimstats[nrow(swimstats),9] - pr2[4,2]
pr2[5,5] <- swimstats[nrow(swimstats),10] - pr2[5,2]
pr$pr <- as.character(pr$pr)
pr2$pr <- as.character(pr2$pr)
pr$vs.today <- as.character(pr$vs.today)
pr2$vs.today <- as.character(pr2$vs.today)
pr <- rbind(pr,pr2)
pr
pr2
prdps
prdps <- swimstats %>% arrange(meters.per.stroke) %>% select(date,meters.per.stroke)
prdps
pr50 <- swimstats %>% arrange(fast.50) %>% select(date,fast.50)
names(pr50) <- c("date","pr")
pr50 <- pr50[1,]
pr100 <- swimstats %>% arrange(fast.100) %>% select(date,fast.100)
names(pr100) <- c("date","pr")
pr100 <- pr100[1,]
pr200 <- swimstats %>% arrange(fast.200) %>% select(date, fast.200)
names(pr200) <- c("date","pr")
pr200 <- pr200[1,]
pr <- rbind(pr50,pr100,pr200)
pr$category <- c("Fastest 50m","Fastest 100m","Fastest 200m")
pr <- pr %>% select(category, pr,date)
pr$days.since <- Sys.Date() - pr$date
prdist <- swimstats %>% arrange(desc(meters)) %>% select(date,meters)
names(prdist) <- c("date","pr")
prdist <- prdist[1,]
prcont <- swimstats %>% arrange(desc(long)) %>% select(date,long)
names(prcont) <- c("date","pr")
prcont <- prcont[1,]
prspeed <- swimstats %>% arrange(desc(meters.per.sec)) %>% select(date,meters.per.sec)
names(prspeed) <- c("date","pr")
prspeed <- prspeed[1,]
prdps <- swimstats %>% arrange(meters.per.stroke) %>% select(date,meters.per.stroke)
names(prdps) <- c("date","pr")
prdps <- prdps[1,]
prrate <- swimstats %>% arrange(desc(secs.per.stroke)) %>% select(date,secs.per.stroke)
names(prrate) <- c("date","pr")
prrate <- prrate[1,]
pr2 <- rbind(prdist,prcont,prspeed,prdps,prrate)
pr2$category <- c("Total Distance","Cont. Distance","Meters/Second","DPS","Stroke Rate")
pr2 <- pr2 %>% select(category, pr,date)
pr2$days.since <- Sys.Date() - pr2$date
pr$vs.today <- duration(49, "seconds")
pr2$vs.today <- 0
pr[1,5] <- swimstats[nrow(swimstats),5] - pr[1,2]
pr[2,5] <- swimstats[nrow(swimstats),6] - pr[2,2]
pr[3,5] <- swimstats[nrow(swimstats),7] - pr[3,2]
pr2[1,5] <- swimstats[nrow(swimstats),3] - pr2[1,2]
pr2[2,5] <- swimstats[nrow(swimstats),8] - pr2[2,2]
pr2[3,5] <- swimstats[nrow(swimstats),11] - pr2[3,2]
pr2[4,5] <- swimstats[nrow(swimstats),9] - pr2[4,2]
pr2[5,5] <- swimstats[nrow(swimstats),10] - pr2[5,2]
pr$pr <- as.character(pr$pr)
pr2$pr <- as.character(pr2$pr)
pr$vs.today <- as.character(pr$vs.today)
pr2$vs.today <- as.character(pr2$vs.today)
pr <- rbind(pr,pr2)
pr
pr50 <- swimstats %>% arrange(fast.50) %>% select(date,fast.50)
names(pr50) <- c("date","pr")
pr50 <- pr50[1,]
pr100 <- swimstats %>% arrange(fast.100) %>% select(date,fast.100)
names(pr100) <- c("date","pr")
pr100 <- pr100[1,]
pr200 <- swimstats %>% arrange(fast.200) %>% select(date, fast.200)
names(pr200) <- c("date","pr")
pr200 <- pr200[1,]
pr <- rbind(pr50,pr100,pr200)
pr$category <- c("Fastest 50m","Fastest 100m","Fastest 200m")
pr <- pr %>% select(category, pr,date)
pr$days.since <- Sys.Date() - pr$date
prdist <- swimstats %>% arrange(desc(meters)) %>% select(date,meters)
names(prdist) <- c("date","pr")
prdist <- prdist[1,]
prcont <- swimstats %>% arrange(desc(long)) %>% select(date,long)
names(prcont) <- c("date","pr")
prcont <- prcont[1,]
prspeed <- swimstats %>% arrange(desc(meters.per.sec)) %>% select(date,meters.per.sec)
names(prspeed) <- c("date","pr")
prspeed <- prspeed[1,]
prdps <- swimstats %>% arrange(desc(meters.per.stroke)) %>% select(date,meters.per.stroke)
names(prdps) <- c("date","pr")
prdps <- prdps[1,]
prrate <- swimstats %>% arrange(secs.per.stroke) %>% select(date,secs.per.stroke)
names(prrate) <- c("date","pr")
prrate <- prrate[1,]
pr2 <- rbind(prdist,prcont,prspeed,prdps,prrate)
pr2$category <- c("Total Distance","Cont. Distance","Meters/Second","DPS","Stroke Rate")
pr2 <- pr2 %>% select(category, pr,date)
pr2$days.since <- Sys.Date() - pr2$date
pr$vs.today <- duration(49, "seconds")
pr2$vs.today <- 0
pr[1,5] <- swimstats[nrow(swimstats),5] - pr[1,2]
pr[2,5] <- swimstats[nrow(swimstats),6] - pr[2,2]
pr[3,5] <- swimstats[nrow(swimstats),7] - pr[3,2]
pr2[1,5] <- swimstats[nrow(swimstats),3] - pr2[1,2]
pr2[2,5] <- swimstats[nrow(swimstats),8] - pr2[2,2]
pr2[3,5] <- swimstats[nrow(swimstats),11] - pr2[3,2]
pr2[4,5] <- swimstats[nrow(swimstats),9] - pr2[4,2]
pr2[5,5] <- swimstats[nrow(swimstats),10] - pr2[5,2]
pr$pr <- as.character(pr$pr)
pr2$pr <- as.character(pr2$pr)
pr$vs.today <- as.character(pr$vs.today)
pr2$vs.today <- as.character(pr2$vs.today)
pr <- rbind(pr,pr2)
pr
suppressMessages(library(tidyverse))
suppressMessages(library(lubridate))
# Read in stats and fix times
swimstats <- read_csv("~/Google Drive/Personal Documents/swimstats.csv")
swimstats$time <- duration(as.numeric(sub("s.*", "", swimstats$time)), "seconds")
swimstats$fast.50 <- duration(as.numeric(sub("s.*", "", swimstats$fast.50)), "seconds")
swimstats$fast.100 <- duration(as.numeric(sub("s.*", "", swimstats$fast.100)), "seconds")
swimstats$fast.200 <- duration(as.numeric(sub("s.*", "", swimstats$fast.200)), "seconds")
# PRs and Totals
pr50 <- swimstats %>% arrange(fast.50) %>% select(date,fast.50)
names(pr50) <- c("date","pr")
pr50 <- pr50[1,]
pr100 <- swimstats %>% arrange(fast.100) %>% select(date,fast.100)
names(pr100) <- c("date","pr")
pr100 <- pr100[1,]
pr200 <- swimstats %>% arrange(fast.200) %>% select(date, fast.200)
names(pr200) <- c("date","pr")
pr200 <- pr200[1,]
pr <- rbind(pr50,pr100,pr200)
pr$category <- c("Fastest 50m","Fastest 100m","Fastest 200m")
pr <- pr %>% select(category, pr,date)
pr$days.since <- Sys.Date() - pr$date
prdist <- swimstats %>% arrange(desc(meters)) %>% select(date,meters)
names(prdist) <- c("date","pr")
prdist <- prdist[1,]
prcont <- swimstats %>% arrange(desc(long)) %>% select(date,long)
names(prcont) <- c("date","pr")
prcont <- prcont[1,]
prspeed <- swimstats %>% arrange(desc(meters.per.sec)) %>% select(date,meters.per.sec)
names(prspeed) <- c("date","pr")
prspeed <- prspeed[1,]
prdps <- swimstats %>% arrange(desc(meters.per.stroke)) %>% select(date,meters.per.stroke)
names(prdps) <- c("date","pr")
prdps <- prdps[1,]
prrate <- swimstats %>% arrange(secs.per.stroke) %>% select(date,secs.per.stroke)
names(prrate) <- c("date","pr")
prrate <- prrate[1,]
pr2 <- rbind(prdist,prcont,prspeed,prdps,prrate)
pr2$category <- c("Total Distance","Cont. Distance","Meters/Second","DPS","Stroke Rate")
pr2 <- pr2 %>% select(category, pr,date)
pr2$days.since <- Sys.Date() - pr2$date
pr$vs.today <- duration(49, "seconds")
pr2$vs.today <- 0
pr[1,5] <- swimstats[nrow(swimstats),5] - pr[1,2]
pr[2,5] <- swimstats[nrow(swimstats),6] - pr[2,2]
pr[3,5] <- swimstats[nrow(swimstats),7] - pr[3,2]
pr2[1,5] <- swimstats[nrow(swimstats),3] - pr2[1,2]
pr2[2,5] <- swimstats[nrow(swimstats),8] - pr2[2,2]
pr2[3,5] <- swimstats[nrow(swimstats),11] - pr2[3,2]
pr2[4,5] <- swimstats[nrow(swimstats),9] - pr2[4,2]
pr2[5,5] <- swimstats[nrow(swimstats),10] - pr2[5,2]
pr$pr <- as.character(pr$pr)
pr2$pr <- as.character(pr2$pr)
pr$vs.today <- as.character(pr$vs.today)
pr2$vs.today <- as.character(pr2$vs.today)
pr <- rbind(pr,pr2)
print(pr)
# PRs and Totals
source("~/Google Drive/Personal Documents/swimpr.R")
install.packages(c("backports", "bayestestR", "bibtex", "brms", "broom", "callr", "car", "clubSandwich", "colourpicker", "covr", "cowplot", "data.table", "devtools", "dplyr", "DT", "effectsize", "emmeans", "fastDummies", "fs", "future", "ggeffects", "globals", "glue", "Hmisc", "htmlTable", "httr", "huxtable", "infer", "inline", "insight", "jsonlite", "kableExtra", "knitr", "labelled", "lmtest", "loo", "maptools", "MASS", "matrixStats", "maxLik", "mgcv", "mice", "mnormt", "moderndive", "multcomp", "nlme", "openssl", "openxlsx", "parameters", "performance", "pillar", "pkgbuild", "plm", "processx", "ps", "psych", "quantreg", "R.methodsS3", "R.oo", "R.utils", "Rcpp", "remotes", "rgeos", "rlang", "rstan", "rstanarm", "rstantools", "rvest", "servr", "sf", "shinyjs", "showtext", "sjlabelled", "sjPlot", "StanHeaders", "stringi", "survival", "svglite", "sys", "systemfonts", "testit", "tibble", "tidyr", "tinytex", "TMB", "usethis", "vctrs", "vdiffr", "withr", "xfun", "xmlparsedata", "xts", "zip"))
23.6+24.8
7+9.5
suppressMessages(library(tidyverse))
suppressMessages(library(lubridate))
# Read in stats and fix times
swimstats <- read_csv("~/Google Drive/Personal Documents/swimstats.csv", col_types = cols())
swimstats$time <- duration(as.numeric(sub("s.*", "", swimstats$time)), "seconds")
swimstats$fast.50 <- duration(as.numeric(sub("s.*", "", swimstats$fast.50)), "seconds")
swimstats$fast.100 <- duration(as.numeric(sub("s.*", "", swimstats$fast.100)), "seconds")
swimstats$fast.200 <- duration(as.numeric(sub("s.*", "", swimstats$fast.200)), "seconds")
# Add new swim
newswim <- tibble(as_date("2020-09-29"), # Date
duration(60*61+06, "seconds"), # Time
2125, # Meters
543, # Calories
duration(48.4, "seconds"), # Fastest 50m Freestyle
duration(60*2+04, "seconds"), # Fastest 100m Freestyle
duration(60*4+16.5, "seconds"), # Fastest 200m Freestyle
400, # Longest Continuous Distance
2.48, # Meters Per Stroke (DPS)
3.29) # Seconds Per Stroke (Stroke Rate)
newswim[1,11] <- (newswim[1,9]/newswim[1,10]) # Meters Per Second
swimstats[(nrow(swimstats)+1),] <- newswim
# Overwrite csv
write_csv(swimstats,"~/Google Drive/Personal Documents/swimstats.csv")
# PRs and Totals
source("~/Google Drive/Personal Documents/swimpr.R")
# Plots
#ggplot(swimstats %>% filter(date>as.Date("2020-03-01"))) + geom_point(aes(date,meters.per.sec))
#ggplot(swimstats) + geom_point(aes(calories,meters))
# KBO Fancy Stats
source("~/Google Drive/KBO/2020elo.R")
source("~/Google Drive/KBO/2020stats.R")
