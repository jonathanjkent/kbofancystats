# Put together and save
playoffs <- rbind(segonab,tercera)
write_csv(playoffs, "finalsestiu20.csv")
suppressMessages(library(tidyverse))
suppressMessages(library(rvest))
suppressMessages(library(goalmodel))
suppressMessages(library(scales))
suppressMessages(library(blogdown))
suppressMessages(library(rmarkdown))
options(dplyr.summarise.inform=F)
setwd("~/Google Drive/Futbol")
# Set parameters
year <- 2020
xi.set <- 0.003
# List of leagues
leagues <- read_csv("leagues.csv", col_types = cols())
leagues <- leagues[3:4,]
# List of Segunda B teams
k <- 1
lg.code <- as.character(leagues[k,2])
lg.group <- as.numeric(leagues[k,3])
webpage <- read_html(paste0("https://www.resultados-futbol.com/",lg.code,year,"/grupo",lg.group,"/calendario"))
clubs <- html_nodes(webpage,'.equipo1') %>%  html_nodes("a") %>% html_attr("href") %>% unique()
# Model
history.all <- read_csv("gameshistory.csv", col_types = cols())
history <- history.all %>% filter(home %in% clubs & away %in% clubs)
weights <- weights_dc(history$date, xi=xi.set)
model <- goalmodel(goals1 = history$home.score, goals2 = history$away.score,
team1 = history$home, team2=history$away, weights = weights, rs=TRUE)
# Predict neutral site finals
model$parameters$hfa <- 0
schedule <- data.frame(c("/Barcelona-B","/Cd-Castellon"),c("/Sabadell","/Cornella"))
names(schedule) <- c("home","away")
predictions <- predict_result(model, team1=schedule$home, team2=schedule$away, return_df = TRUE)
predictions$p1 <- predictions$p1 + (predictions$pd/2)
predictions$p2 <- predictions$p2 + (predictions$pd/2)
segonab <- predictions %>% select(team1,p1,p2,team2)
segonab$league <- "segonab"
# List of Tercera teams
k <- 2
lg.code <- as.character(leagues[k,2])
lg.group <- as.numeric(leagues[k,3])
webpage <- read_html(paste0("https://www.resultados-futbol.com/",lg.code,year,"/grupo",lg.group,"/calendario"))
clubs <- html_nodes(webpage,'.equipo1') %>%  html_nodes("a") %>% html_attr("href") %>% unique()
# Model
history.all <- read_csv("gameshistory.csv", col_types = cols())
history <- history.all %>% filter(home %in% clubs & away %in% clubs)
weights <- weights_dc(history$date, xi=xi.set)
model <- goalmodel(goals1 = history$home.score, goals2 = history$away.score,
team1 = history$home, team2=history$away, weights = weights, rs=TRUE)
# Predict neutral site finals
model$parameters$hfa <- 0
schedule <- data.frame("/Hospitalet","/Terrassa-Ii")
names(schedule) <- c("home","away")
predictions <- predict_result(model, team1=schedule$home, team2=schedule$away, return_df = TRUE)
predictions$p1 <- predictions$p1 + predictions$pd
tercera <- predictions %>% select(team1,p1,p2,team2)
tercera$league <- "tercera"
# Put together and save
playoffs <- rbind(segonab,tercera)
write_csv(playoffs, "finalsestiu20.csv")
# KBO Fancy Stats
source("~/Google Drive/KBO/2020elo.R")
setwd("~/Google Drive/Futbol")
suppressMessages(library(tidyverse))
suppressMessages(library(rvest))
suppressMessages(library(goalmodel))
suppressMessages(library(scales))
suppressMessages(library(blogdown))
suppressMessages(library(rmarkdown))
options(dplyr.summarise.inform=F)
setwd("~/Google Drive/Futbol")
# Set parameters
year <- 2020
xi.set <- 0.003
# List of leagues
leagues <- read_csv("leagues.csv", col_types = cols())
leagues <- leagues[2,]
# List of Segunda A teams
k <- 1
lg.code <- as.character(leagues[k,2])
lg.group <- as.numeric(leagues[k,3])
webpage <- read_html(paste0("https://www.resultados-futbol.com/",lg.code,year,"/grupo",lg.group,"/calendario"))
clubs <- html_nodes(webpage,'.equipo1') %>%  html_nodes("a") %>% html_attr("href") %>% unique()
# Model
history.all <- read_csv("gameshistory.csv", col_types = cols())
history <- history.all %>% filter(home %in% clubs & away %in% clubs)
weights <- weights_dc(history$date, xi=xi.set)
model <- goalmodel(goals1 = history$home.score, goals2 = history$away.score,
team1 = history$home, team2=history$away, weights = weights, rs=TRUE)
clubs
seed2 <- "/Almeria"
seed1 <- "/Real-Zaragoza"
seed1 <- "/Real-Zaragoza"
seed2 <- "/Almeria"
seed3 <- "/Girona-Fc"
seed4 <- "/Elche"
# Predict neutral site finals
model$parameters$hfa <- 0
schedule <- data.frame(c(seed1,seed2),c(seed4,seed3))
schedule
names(schedule) <- c("home","away")
predictions <- predict_result(model, team1=schedule$home, team2=schedule$away, return_df = TRUE)
predictions$p1 <- predictions$p1 + (predictions$pd/2)
predictions$p2 <- predictions$p2 + (predictions$pd/2)
predictions <- predictions %>% select(team1,p1,p2,team2)
predictions
sims <- predictions
sims$random <- runif((nrow(sims)),0,1)
sims
assign(final1, ifelse(random<p1,sims[1,1],sims[1,4]))
assign("final1", ifelse(random<p1,sims[1,1],sims[1,4]))
assign("final1", ifelse(sims$random<sims$p1,sims[1,1],sims[1,4]))
ifelse(sims$random<sims$p1,sims[1,1],sims[1,4])
assign("final1", ifelse(sims$random[1]<sims$p1[1],sims[1,1],sims[1,4]))
assign("final2", ifelse(sims$random[2]<sims$p1[2],sims[2,1],sims[2,4]))
sims
schedule <- data.frame(final1,final2)
names(schedule) <- c("home","away")
schedule
predictions <- predict_result(model, team1=schedule$home, team2=schedule$away, return_df = TRUE)
predictions$p1 <- predictions$p1 + (predictions$pd/2)
predictions$p2 <- predictions$p2 + (predictions$pd/2)
predictions <- predictions %>% select(team1,p1,p2,team2)
predictions
assign("ascens", ifelse(sims$random[1]<sims$p1[1],sims[1,1],sims[1,4]))
sims
suppressMessages(library(tidyverse))
suppressMessages(library(rvest))
suppressMessages(library(goalmodel))
suppressMessages(library(scales))
suppressMessages(library(blogdown))
suppressMessages(library(rmarkdown))
options(dplyr.summarise.inform=F)
setwd("~/Google Drive/Futbol")
# Set parameters
year <- 2020
xi.set <- 0.003
# List of leagues
leagues <- read_csv("leagues.csv", col_types = cols())
leagues <- leagues[2,]
# List of Segunda A teams
k <- 1
lg.code <- as.character(leagues[k,2])
lg.group <- as.numeric(leagues[k,3])
webpage <- read_html(paste0("https://www.resultados-futbol.com/",lg.code,year,"/grupo",lg.group,"/calendario"))
clubs <- html_nodes(webpage,'.equipo1') %>%  html_nodes("a") %>% html_attr("href") %>% unique()
# Model
history.all <- read_csv("gameshistory.csv", col_types = cols())
history <- history.all %>% filter(home %in% clubs & away %in% clubs)
weights <- weights_dc(history$date, xi=xi.set)
model <- goalmodel(goals1 = history$home.score, goals2 = history$away.score,
team1 = history$home, team2=history$away, weights = weights, rs=TRUE)
# Set playoff teams
seed1 <- "/Real-Zaragoza"
seed2 <- "/Almeria"
seed3 <- "/Girona-Fc"
seed4 <- "/Elche"
# Predict neutral site finals
model$parameters$hfa <- 0
schedule <- data.frame(c(seed1,seed2),c(seed4,seed3))
names(schedule) <- c("home","away")
predictions <- predict_result(model, team1=schedule$home, team2=schedule$away, return_df = TRUE)
predictions$p1 <- predictions$p1 + (predictions$pd/2)
predictions$p2 <- predictions$p2 + (predictions$pd/2)
predictions <- predictions %>% select(team1,p1,p2,team2)
# Simulate semis
sims <- predictions
sims$random <- runif((nrow(sims)),0,1)
assign("final1", ifelse(sims$random[1]<sims$p1[1],sims[1,1],sims[1,4]))
assign("final2", ifelse(sims$random[2]<sims$p1[2],sims[2,1],sims[2,4]))
schedule <- data.frame(final1,final2)
names(schedule) <- c("home","away")
final <- predict_result(model, team1=schedule$home, team2=schedule$away, return_df = TRUE)
final$p1 <- final$p1 + (final$pd/2)
final$p2 <- final$p2 + (final$pd/2)
final <- final %>% select(team1,p1,p2,team2)
final$random <- runif((nrow(final)),0,1)
assign("ascens", ifelse(final$random[1]<final$p1[1],final[1,1],final[1,4]))
all.ascens <- NA
all.finals <- NA
# Bind
all.finals <- rbind(all.finals, final1, final2)
View(all.finals)
all.ascens <- rbind(all.ascens,ascens)
all.finals <- NA
all.ascens <- NA
# Simulate semis
for (i in 1:10000){
sims <- predictions
sims$random <- runif((nrow(sims)),0,1)
assign("final1", ifelse(sims$random[1]<sims$p1[1],sims[1,1],sims[1,4]))
assign("final2", ifelse(sims$random[2]<sims$p1[2],sims[2,1],sims[2,4]))
#Simulate final
schedule <- data.frame(final1,final2)
names(schedule) <- c("home","away")
final <- predict_result(model, team1=schedule$home, team2=schedule$away, return_df = TRUE)
final$p1 <- final$p1 + (final$pd/2)
final$p2 <- final$p2 + (final$pd/2)
final <- final %>% select(team1,p1,p2,team2)
final$random <- runif((nrow(final)),0,1)
assign("ascens", ifelse(final$random[1]<final$p1[1],final[1,1],final[1,4]))
# Bind
all.finals <- rbind(all.finals, final1, final2)
all.ascens <- rbind(all.ascens,ascens)
}
all.finals <- all.finals[2:length(all.finals)]
all.ascens <- all.ascens[2:length(all.ascens)]
table(all.finals)
data.frame(table(all.finals))
playoffs <- data.frame(table(all.finals))
t <- data.frame(table(all.ascens))
t
names(playoffs) <- c("team","final")
names(t) <- c("team","ascens")
playoffs <- playoffs %>% left_join(t, by = "team")
playoffs
n.sim <- 10000
playoffs$final/n.sim
playoffs$final <- (playoffs$final/n.sim)*100
playoffs$ascens <- (playoffs$ascens/n.sim)*100
playoffs
suppressMessages(library(tidyverse))
suppressMessages(library(rvest))
suppressMessages(library(goalmodel))
suppressMessages(library(scales))
suppressMessages(library(blogdown))
suppressMessages(library(rmarkdown))
options(dplyr.summarise.inform=F)
setwd("~/Google Drive/Futbol")
# Set parameters
year <- 2020
xi.set <- 0.003
n.sim <- 10000
# List of leagues
leagues <- read_csv("leagues.csv", col_types = cols())
leagues <- leagues[2,]
# List of Segunda A teams
k <- 1
lg.code <- as.character(leagues[k,2])
lg.group <- as.numeric(leagues[k,3])
webpage <- read_html(paste0("https://www.resultados-futbol.com/",lg.code,year,"/grupo",lg.group,"/calendario"))
clubs <- html_nodes(webpage,'.equipo1') %>%  html_nodes("a") %>% html_attr("href") %>% unique()
# Model
history.all <- read_csv("gameshistory.csv", col_types = cols())
history <- history.all %>% filter(home %in% clubs & away %in% clubs)
weights <- weights_dc(history$date, xi=xi.set)
model <- goalmodel(goals1 = history$home.score, goals2 = history$away.score,
team1 = history$home, team2=history$away, weights = weights, rs=TRUE)
# Set playoff teams
seed1 <- "/Real-Zaragoza"
seed2 <- "/Almeria"
seed3 <- "/Girona-Fc"
seed4 <- "/Elche"
# Predict neutral site finals
model$parameters$hfa <- 0
schedule <- data.frame(c(seed1,seed2),c(seed4,seed3))
names(schedule) <- c("home","away")
predictions <- predict_result(model, team1=schedule$home, team2=schedule$away, return_df = TRUE)
predictions$p1 <- predictions$p1 + (predictions$pd/2)
predictions$p2 <- predictions$p2 + (predictions$pd/2)
predictions <- predictions %>% select(team1,p1,p2,team2)
all.finals <- NA
all.ascens <- NA
# Simulate semis
for (i in 1:n.sim){
sims <- predictions
sims$random <- runif((nrow(sims)),0,1)
assign("final1", ifelse(sims$random[1]<sims$p1[1],sims[1,1],sims[1,4]))
assign("final2", ifelse(sims$random[2]<sims$p1[2],sims[2,1],sims[2,4]))
#Simulate final
schedule <- data.frame(final1,final2)
names(schedule) <- c("home","away")
final <- predict_result(model, team1=schedule$home, team2=schedule$away, return_df = TRUE)
final$p1 <- final$p1 + (final$pd/2)
final$p2 <- final$p2 + (final$pd/2)
final <- final %>% select(team1,p1,p2,team2)
final$random <- runif((nrow(final)),0,1)
assign("ascens", ifelse(final$random[1]<final$p1[1],final[1,1],final[1,4]))
# Bind
all.finals <- rbind(all.finals, final1, final2)
all.ascens <- rbind(all.ascens,ascens)
}
all.finals <- all.finals[2:length(all.finals)]
all.ascens <- all.ascens[2:length(all.ascens)]
playoffs <- data.frame(table(all.finals))
names(playoffs) <- c("team","final")
t <- data.frame(table(all.ascens))
names(t) <- c("team","ascens")
playoffs <- playoffs %>% left_join(t, by = "team")
playoffs$final <- (playoffs$final/n.sim)*100
playoffs$ascens <- (playoffs$ascens/n.sim)*100
playoffs
View(sims)
model
View(history)
View(history.all)
suppressMessages(library(tidyverse))
suppressMessages(library(rvest))
suppressMessages(library(goalmodel))
suppressMessages(library(scales))
suppressMessages(library(blogdown))
suppressMessages(library(rmarkdown))
options(dplyr.summarise.inform=F)
setwd("~/Google Drive/Futbol")
# Set parameters
year <- 2020
xi.set <- 0.003
n.sim <- 10000
# List of leagues
leagues <- read_csv("leagues.csv", col_types = cols())
leagues <- leagues[2,]
# List of Segunda A teams
k <- 1
lg.name <- as.character(leagues[k,1])
lg.code <- as.character(leagues[k,2])
lg.group <- as.numeric(leagues[k,3])
lg.type1 <- as.numeric(leagues[k,4])
lg.type2 <- as.numeric(leagues[k,5])
lg.type3 <- as.numeric(leagues[k,6])
lg.type1name <- as.character(leagues[k,7])
lg.type2name <- as.character(leagues[k,8])
webpage <- read_html(paste0("https://www.resultados-futbol.com/",lg.code,year,"/grupo",lg.group,"/calendario"))
local_data <- html_nodes(webpage,'.equipo1') %>%  html_nodes("a") %>% html_attr("href")
vist_data <- html_nodes(webpage,'.equipo2') %>%  html_nodes("a") %>% html_attr("href")
result_data <- html_nodes(webpage,'.rstd') %>% html_text()
dates_data <- html_nodes(webpage,'.fecha') %>% html_text()
# Create dataset of all games
games <- data.frame(home = local_data, away = vist_data, score = result_data, date = dates_data)
games$score <- str_sub(games$score, -11, -7)
# Recode dates
games <- games %>% separate(date, c("day", "month", "year"), extra = "drop")
games$year <- as.numeric(games$year) + 2000
month <- c("Ago", "Sep", "Oct", "Nov", "Dic", "Ene", "Feb", "Mar", "Abr", "May", "Jun", "Jul")
month.num <- c(8,9,10,11,12,1,2,3,4,5,6,7)
month.recode <- cbind.data.frame(month,month.num)
games <- games %>% left_join(month.recode, by = "month")
games$date <- as.Date(with(games, paste(year, month.num, day,sep="-")), "%Y-%m-%d")
games <- games %>% select(-day, -month, -year, -month.num)
# Add jornada
teams <- length(unique(games$home))
jornadas <- (teams-1)*2
games$jornada <- rep(1:jornadas, each = (teams/2))
# Separate compeleted and uncompleted games
results <- filter(games, grepl("-", games$score))
results <- filter(results, !grepl("x", results$score))
results <- filter(results, !grepl("'", results$score))
results <- results %>% separate(score, c("home.score", "away.score"), extra = "drop")
results$home.score <- as.numeric(results$home.score)
results$away.score <- as.numeric(results$away.score)
# Model
history.all <- read_csv("gameshistory.csv", col_types = cols())
history <- history.all %>% filter(home %in% clubs & away %in% clubs)
history <- rbind(history,results)
weights <- weights_dc(history$date, xi=xi.set)
model <- goalmodel(goals1 = history$home.score, goals2 = history$away.score,
team1 = history$home, team2=history$away, weights = weights, rs=TRUE)
# Set playoff teams
seed1 <- "/Real-Zaragoza"
seed2 <- "/Almeria"
seed3 <- "/Girona-Fc"
seed4 <- "/Elche"
# Predict neutral site finals
model$parameters$hfa <- 0
schedule <- data.frame(c(seed1,seed2),c(seed4,seed3))
names(schedule) <- c("home","away")
predictions <- predict_result(model, team1=schedule$home, team2=schedule$away, return_df = TRUE)
predictions$p1 <- predictions$p1 + (predictions$pd/2)
predictions$p2 <- predictions$p2 + (predictions$pd/2)
predictions <- predictions %>% select(team1,p1,p2,team2)
all.finals <- NA
all.ascens <- NA
# Simulate semis
for (i in 1:n.sim){
sims <- predictions
sims$random <- runif((nrow(sims)),0,1)
assign("final1", ifelse(sims$random[1]<sims$p1[1],sims[1,1],sims[1,4]))
assign("final2", ifelse(sims$random[2]<sims$p1[2],sims[2,1],sims[2,4]))
#Simulate final
schedule <- data.frame(final1,final2)
names(schedule) <- c("home","away")
final <- predict_result(model, team1=schedule$home, team2=schedule$away, return_df = TRUE)
final$p1 <- final$p1 + (final$pd/2)
final$p2 <- final$p2 + (final$pd/2)
final <- final %>% select(team1,p1,p2,team2)
final$random <- runif((nrow(final)),0,1)
assign("ascens", ifelse(final$random[1]<final$p1[1],final[1,1],final[1,4]))
# Bind
all.finals <- rbind(all.finals, final1, final2)
all.ascens <- rbind(all.ascens,ascens)
}
all.finals <- all.finals[2:length(all.finals)]
all.ascens <- all.ascens[2:length(all.ascens)]
playoffs <- data.frame(table(all.finals))
names(playoffs) <- c("team","final")
t <- data.frame(table(all.ascens))
names(t) <- c("team","ascens")
playoffs <- playoffs %>% left_join(t, by = "team")
playoffs$final <- (playoffs$final/n.sim)*100
playoffs$ascens <- (playoffs$ascens/n.sim)*100
playoffs
clubs
suppressMessages(library(tidyverse))
suppressMessages(library(rvest))
suppressMessages(library(goalmodel))
suppressMessages(library(scales))
suppressMessages(library(blogdown))
suppressMessages(library(rmarkdown))
options(dplyr.summarise.inform=F)
setwd("~/Google Drive/Futbol")
# Set parameters
year <- 2020
xi.set <- 0.003
n.sim <- 10000
# List of leagues
leagues <- read_csv("leagues.csv", col_types = cols())
leagues <- leagues[2,]
# List of Segunda A teams
k <- 1
lg.name <- as.character(leagues[k,1])
lg.code <- as.character(leagues[k,2])
lg.group <- as.numeric(leagues[k,3])
lg.type1 <- as.numeric(leagues[k,4])
lg.type2 <- as.numeric(leagues[k,5])
lg.type3 <- as.numeric(leagues[k,6])
lg.type1name <- as.character(leagues[k,7])
lg.type2name <- as.character(leagues[k,8])
webpage <- read_html(paste0("https://www.resultados-futbol.com/",lg.code,year,"/grupo",lg.group,"/calendario"))
local_data <- html_nodes(webpage,'.equipo1') %>%  html_nodes("a") %>% html_attr("href")
vist_data <- html_nodes(webpage,'.equipo2') %>%  html_nodes("a") %>% html_attr("href")
result_data <- html_nodes(webpage,'.rstd') %>% html_text()
dates_data <- html_nodes(webpage,'.fecha') %>% html_text()
# Create dataset of all games
games <- data.frame(home = local_data, away = vist_data, score = result_data, date = dates_data)
games$score <- str_sub(games$score, -11, -7)
# Recode dates
games <- games %>% separate(date, c("day", "month", "year"), extra = "drop")
games$year <- as.numeric(games$year) + 2000
month <- c("Ago", "Sep", "Oct", "Nov", "Dic", "Ene", "Feb", "Mar", "Abr", "May", "Jun", "Jul")
month.num <- c(8,9,10,11,12,1,2,3,4,5,6,7)
month.recode <- cbind.data.frame(month,month.num)
games <- games %>% left_join(month.recode, by = "month")
games$date <- as.Date(with(games, paste(year, month.num, day,sep="-")), "%Y-%m-%d")
games <- games %>% select(-day, -month, -year, -month.num)
# Add jornada
teams <- length(unique(games$home))
jornadas <- (teams-1)*2
games$jornada <- rep(1:jornadas, each = (teams/2))
# Separate compeleted and uncompleted games
results <- filter(games, grepl("-", games$score))
results <- filter(results, !grepl("x", results$score))
results <- filter(results, !grepl("'", results$score))
results <- results %>% separate(score, c("home.score", "away.score"), extra = "drop")
results$home.score <- as.numeric(results$home.score)
results$away.score <- as.numeric(results$away.score)
# Model
history.all <- read_csv("gameshistory.csv", col_types = cols())
history <- history.all %>% filter(home %in% clubs & away %in% clubs)
history <- rbind(history,results)
weights <- weights_dc(history$date, xi=xi.set)
model <- goalmodel(goals1 = history$home.score, goals2 = history$away.score,
team1 = history$home, team2=history$away, weights = weights, rs=TRUE)
# Set playoff teams
seed1 <- "/Real-Zaragoza"
seed2 <- "/Almeria"
seed3 <- "/Girona-Fc"
#seed4 <- "/Elche"
seed4 <- "/Fuenlabrada"
# Predict neutral site finals
model$parameters$hfa <- 0
schedule <- data.frame(c(seed1,seed2),c(seed4,seed3))
names(schedule) <- c("home","away")
predictions <- predict_result(model, team1=schedule$home, team2=schedule$away, return_df = TRUE)
predictions$p1 <- predictions$p1 + (predictions$pd/2)
predictions$p2 <- predictions$p2 + (predictions$pd/2)
predictions <- predictions %>% select(team1,p1,p2,team2)
all.finals <- NA
all.ascens <- NA
# Simulate semis
for (i in 1:n.sim){
sims <- predictions
sims$random <- runif((nrow(sims)),0,1)
assign("final1", ifelse(sims$random[1]<sims$p1[1],sims[1,1],sims[1,4]))
assign("final2", ifelse(sims$random[2]<sims$p1[2],sims[2,1],sims[2,4]))
#Simulate final
schedule <- data.frame(final1,final2)
names(schedule) <- c("home","away")
final <- predict_result(model, team1=schedule$home, team2=schedule$away, return_df = TRUE)
final$p1 <- final$p1 + (final$pd/2)
final$p2 <- final$p2 + (final$pd/2)
final <- final %>% select(team1,p1,p2,team2)
final$random <- runif((nrow(final)),0,1)
assign("ascens", ifelse(final$random[1]<final$p1[1],final[1,1],final[1,4]))
# Bind
all.finals <- rbind(all.finals, final1, final2)
all.ascens <- rbind(all.ascens,ascens)
}
all.finals <- all.finals[2:length(all.finals)]
all.ascens <- all.ascens[2:length(all.ascens)]
playoffs <- data.frame(table(all.finals))
names(playoffs) <- c("team","final")
t <- data.frame(table(all.ascens))
names(t) <- c("team","ascens")
playoffs <- playoffs %>% left_join(t, by = "team")
playoffs$final <- (playoffs$final/n.sim)*100
playoffs$ascens <- (playoffs$ascens/n.sim)*100
playoffs
source("~/Google Drive/KBO/2020stats.R")
source("~/Google Drive/Futbol/c19update.R")
# KBO Fancy Stats
source("~/Google Drive/KBO/2020elo.R")
source("~/Google Drive/KBO/2020stats.R")
