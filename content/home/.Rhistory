pred.3$Pct <- (pred.3$n/nsim)
colnames(pred.3) <- c("Winner", "n", "Third")
pred.4 <- standings %>% filter(Rank == 4) %>% group_by(Winner) %>% count(wt = n())
pred.4$Pct <- (pred.4$n/nsim)
colnames(pred.4) <- c("Winner", "n", "Fourth")
pred.5 <- standings %>% filter(Rank == 5) %>% group_by(Winner) %>% count(wt = n())
pred.5$Pct <- (pred.5$n/nsim)
colnames(pred.5) <- c("Winner", "n", "Fifth")
pred.6 <- standings %>% filter(Rank > 5) %>% group_by(Winner) %>% count(wt = n())
pred.6$Pct <- (pred.6$n/nsim)
colnames(pred.6) <- c("Winner", "n", "Out")
predictions <- ungroup(as.data.frame(standings$Winner[1:10]))
colnames(predictions) <- "Winner"
predictions <- pred.1 %>% select(-n) %>% right_join(predictions, by = "Winner")
predictions <- pred.2 %>% select(-n) %>% right_join(predictions, by = "Winner")
predictions <- pred.3 %>% select(-n) %>% right_join(predictions, by = "Winner")
predictions <- pred.4 %>% select(-n) %>% right_join(predictions, by = "Winner")
predictions <- pred.5 %>% select(-n) %>% right_join(predictions, by = "Winner")
predictions <- pred.6 %>% select(-n) %>% right_join(predictions, by = "Winner")
predictions$Team <- predictions$Winner
predictions <- predictions %>% left_join(current.elos, by = "Team")
predictions <- predictions %>% ungroup() %>% select(-Winner)
predictions <- predictions %>%
mutate(First = percent(First, 1)) %>%
mutate(Second = percent(Second, 1)) %>%
mutate(Third = percent(Third, 1)) %>%
mutate(Fourth = percent(Fourth, 1)) %>%
mutate(Fifth = percent(Fifth, 1)) %>%
mutate(Out = percent(Out, 1))
predictions <- predictions %>% select(Rank, Team, Elo, First, Second, Third, Fourth, Fifth, Out)
predictions[is.na(predictions)] <- "0%"
write_csv(predictions, "predictions.csv")
## Render Elo Pages
render("~/Google Drive/KBO/kbofancystats/content/elo.Rmd")
render("~/Google Drive/KBO/kbofancystats/content/elo2020.Rmd")
render("~/Google Drive/KBO/kbofancystats/content/elohistory.Rmd")
setwd("~/Google Drive/KBO/kbofancystats")
#stop_server()
serve_site()
## Homepage image
setwd("~/Google Drive/KBO/kbofancystats/static/img")
tenteam <- read_csv("~/Google Drive/KBO/elohistory.csv")
tenteam <- tenteam %>% subset(Date > ISOdate(2020,5,4))
tenteam$Team <- as.factor(tenteam$Team)
rank <- read_csv("~/Google Drive/KBO/currentelos.csv")
rank$Team2 <- paste0(rank$Team, " (",rank$Elo,")")
levels <- rank$Team2
tenteam <- tenteam %>% left_join(rank, by = "Team")
tenteam$Team2 <- as.factor(tenteam$Team2)
tenteam$Team2 <- factor(tenteam$Team2, levels = levels)
plot <- ggplot() + geom_line(data = tenteam, aes(Date, Elo.x, color = Team2)) + theme_minimal() + labs(x = "", y = "Elo", color = "")
ggsave("elo.png", width = 8, height = 3)
library(tidyverse)
library(rvest)
library(blogdown)
library(rmarkdown)
library(scales)
setwd("~/Google Drive/KBO")
## Blank Data Sets
pitchers <- NA
batters <- NA
## List of recent games
game.links <- read_html("https://mykbostats.com/") %>%  html_nodes("a") %>% html_attr("href")
game.links <- game.links[str_detect(game.links, "games")]
game.links <- game.links[2:length(game.links)]
## Scrape Daily Box Scores for Active Players
all.links <- NA
for (i in game.links){
print(i)
url <- paste0("https://mykbostats.com",i)
links <- read_html(url) %>% html_nodes("table") %>% html_nodes("a") %>% html_attr("href")
links <- links[str_detect(links, "players")]
all.links <- append(all.links, links)
}
all.links <- all.links[2:length(all.links)]
all.links <- unique(all.links)
## Scrape Players' 2020 Stats
for (i in 1:length(all.links)){
print(percent(i/length(all.links)))
url <- paste0("https://mykbostats.com",all.links[i])
site <- read_html(url)
player <- site %>% html_table(fill = T)
player <- as.data.frame(player[1])
player <- player[1,]
player$Url <- url
player$Code <- gsub("\\D", "", url)
## Add Name, Position, Etc.
d <- site %>%
html_node("h1") %>% html_text()
d <- gsub("[\r\n]", "", d)
d <- strsplit(d, "[|()#]")
player$Name <- substring(d[[1]][1], first = 1, last = (nchar(d[[1]][1]))-1)
player$Position <- substring(d[[1]][5], first = 2)
player$Number <- substring(d[[1]][4], first = 1, last = (nchar(d[[1]][4]))-1)
player$KName <- d[[1]][2]
## Add birthyear
d <- site %>% html_text()
year <- sub("years .*", "", d)
year <- str_sub(year,-9,-6)
player$Born <- year
## Add To Batter or Pitcher Data
if (length(player) == 35) {
pitchers <- rbind(pitchers, player)
} else {
batters <- rbind(batters, player)
}
}
pitchers <- pitchers[2:nrow(pitchers),]
names(pitchers)[8] <- "Hold"
names(pitchers)[19] <- "H"
batters <- batters[2:nrow(batters),]
batters <- batters %>% filter(Year == 2020)
pitchers <- pitchers %>% filter(Year == 2020)
batters$Code <- (as.numeric(batters$Code) * 7) + 5
pitchers$Code <- (as.numeric(pitchers$Code) * 7) + 5
batters$Age <- as.numeric(batters$Year) - as.numeric(batters$Born)
pitchers$Age <- as.numeric(pitchers$Year) - as.numeric(pitchers$Born)
### Fix Teams
batters$Team <- as.factor(batters$Team)
batters$Team <- recode(batters$Team,
"Doosan" = "Doosan Bears",
"Hanwha" = "Hanwha Eagles",
"Kia" = "Kia Tigers",
"Kiwoom" = "Kiwoom Heroes",
"KT" = "KT Wiz",
"LG" = "LG Twins",
"Lotte" = "Lotte Giants",
"NC" = "NC Dinos",
"Nexen" = "Kiwoom Heroes",
"Samsung" = "Samsung Lions",
"SK" = "SK Wyverns")
pitchers$Team <- as.factor(pitchers$Team)
pitchers$Team <- recode(pitchers$Team,
"Doosan" = "Doosan Bears",
"Hanwha" = "Hanwha Eagles",
"Kia" = "Kia Tigers",
"Kiwoom" = "Kiwoom Heroes",
"KT" = "KT Wiz",
"LG" = "LG Twins",
"Lotte" = "Lotte Giants",
"NC" = "NC Dinos",
"Nexen" = "Kiwoom Heroes",
"Samsung" = "Samsung Lions",
"SK" = "SK Wyverns")
#### Do the Fancy Stats
## Add Park Factors
pf <- read_csv("parkfactors.csv")
batters <- batters %>% left_join(pf, by = "Team")
pitchers <- pitchers %>% left_join(pf, by = "Team")
## Guts
guts <- read_csv("guts.csv")
guts <- guts %>% subset(Season > 1998)
wBB <- mean(guts$wBB)
wHBP <- mean(guts$wHBP)
w1B <- mean(guts$w1B)
w2B <- mean(guts$w2B)
w3B <- mean(guts$w3B)
wHR <- mean(guts$wHR)
runSB <- mean(guts$runSB)
runCS <- mean(guts$runCS)
## Fix Basics
batters$X1B <- batters$H-batters$X2B-batters$X3B-batters$HR
pitchers$IP2 <- pitchers$IP
pitchers <- pitchers %>% separate(IP, c("a", "b"))
pitchers$b <-  substring(pitchers$b, first = 5, last = 5)
pitchers$b[is.na(pitchers$b)] <- 0
pitchers$IP <- as.numeric(pitchers$a) + as.numeric(pitchers$b)*(1/3)
pitchers$IP2 <- paste0(pitchers$a,".",pitchers$b)
pitchers <- pitchers %>% select(-a, -b)
# Batter background
lgstats <- read_html("https://www.baseball-reference.com/register/league.cgi?id=17edbc3b") %>%
xml_find_all('//comment()') %>% xml_text() %>%
paste0(collapse = "") %>% read_html %>% xml_find_all("//table") %>% html_table()
lgPA <- lgstats[[1]][11,6]
lgBB <- lgstats[[1]][11,16]
lgIBB <- lgstats[[1]][11,27]
lgHBP <- lgstats[[1]][11,24]
lgH <- lgstats[[1]][11,9]
lg2B <- lgstats[[1]][11,10]
lg3B <- lgstats[[1]][11,11]
lgHR <- lgstats[[1]][11,12]
lg1B <- lgH - lg2B - lg3B - lgHR
lgSB <- lgstats[[1]][11,14]
lgCS <- lgstats[[1]][11,15]
lgR <- lgstats[[1]][11,8]
lgRPA <- lgR/lgPA
lgRPA19 <- (lgR+6548)/(lgPA+55626)
lgwOBA <- (wBB*(lgBB-lgIBB) + wHBP*lgHBP + w1B*lg1B + w2B*lg2B + w3B*lg3B + wHR*lgHR)/(lgPA)
wOBAscale <- lgwOBA/.250
lgwSB <- (lgSB * runSB + lgCS * runCS) / (lg1B + lgBB + lgHBP - lgIBB)
## Pitcher background
lgIPp <- lgstats[[2]][11,16]
lgRp <- lgR
lgERp <- lgstats[[2]][11,19]
lgSOp <- lgstats[[2]][11,23]
lgHRp <- lgHR
lgBBp <- lgBB
lgHBPp <- lgHBP
lgGSp <- (lgstats[[2]][11,11])/2
RPW <- 9*(lgRp/lgIPp)*1.5 + 3
lgRA9 <- (lgRp/lgIPp)*9
lgERA <- (lgERp/lgIPp)*9
FIPcon <- lgERA - (((13*lgHRp)+(3*(lgBBp+lgHBPp))-(2*lgSOp))/lgIPp)
lgFIPR9 <- lgERA + (lgRA9 - lgERA)
## Batter Stats
batters$wOBA <- (wBB*(batters$BB-batters$IBB) + wHBP*batters$HBP + w1B*batters$X1B + w2B*batters$X2B + w3B*batters$X3B + wHR*batters$HR)/(batters$PA)
batters$wRAA <- ((batters$wOBA-lgwOBA)/wOBAscale)*batters$PA
batters$WAR <- ((batters$wRAA + (lgRPA - (batters$PF*(lgRPA)))*batters$PA) + (batters$SB*runSB + batters$CS*runCS - lgwSB * (batters$X1B + batters$BB + batters$HBP - batters$IBB)) + ((168.9*((lgGSp)/720))*(RPW/lgPA) * batters$PA))/RPW
batters$wRC <- (((batters$wOBA-lgwOBA)/wOBAscale)+(lgRPA))*batters$PA
batters$wRCplus <- (((batters$wRAA/batters$PA + lgRPA) + (lgRPA - batters$PF*lgRPA))/(lgRPA))*100
batters$BBpct <- (batters$BB/batters$PA)*100
batters$SOpct <- (batters$SO/batters$PA)*100
batters$OBP <- (batters$H + batters$BB + batters$HBP)/(batters$PA)
batters$SLG <- (batters$X1B + (2*batters$X2B) + (3*batters$X3B) + (4*batters$HR))/batters$AB
batters$OPS <- batters$OBP + batters$SLG
batters$BA <- batters$H/batters$AB
batters$ISO <- batters$SLG-batters$BA
batters$BABIP <- (batters$H - batters$HR)/(batters$AB - batters$SO - batters$HR + batters$SF)
## Pitcher Stats
pitchers$FIP <- ((13*pitchers$HR)+(3*(pitchers$BB+pitchers$HB))-(2*pitchers$SO))/pitchers$IP + FIPcon
pitchers$FIPR9 <- pitchers$FIP + (lgRA9 - lgERA)
pitchers$pFIPR9 <- pitchers$FIPR9/pitchers$PF
pitchers$dRPW <- (((((18 - pitchers$IP/pitchers$G)*(lgFIPR9)) + ((pitchers$IP/pitchers$G)*pitchers$pFIPR9)) / 18) + 2)*1.5
pitchers$RAAP9 <- lgFIPR9 - pitchers$pFIPR9
pitchers$WPGAA <- pitchers$RAAP9 / pitchers$dRPW
pitchers$RepLev <- 0.03*(1 - pitchers$GS/pitchers$G) + 0.12*(pitchers$GS/pitchers$G)
pitchers$WPGAR <- pitchers$WPGAA + pitchers$RepLev
pitchers$WAR <- pitchers$WPGAR * (pitchers$IP/9)
pitchers$BABIP <- (pitchers$H - pitchers$HR)/(pitchers$TBF - pitchers$BB - pitchers$IBB - pitchers$HB - pitchers$SO - pitchers$HR)
pitchers$SO9 <- pitchers$SO/pitchers$IP*9
pitchers$BB9 <- pitchers$BB/pitchers$IP*9
pitchers$HR9 <- pitchers$HR/pitchers$IP*9
## Lists for pages
listbat <- batters %>% select(Name, Code, KName, Team, Position, Url)
listpit <- pitchers %>% select(Name, Code, KName, Team, Position, Url)
## Combine with Un-Updated 2020
batnoupdate <- read_csv("batters_full_20.csv")
pitnoupdate <- read_csv("pitchers_full_20.csv")
batcodes <- batters$Code
batnoupdate <- batnoupdate %>% filter(!Code %in% batcodes)
pitcodes <- pitchers$Code
pitnoupdate <- pitnoupdate %>% filter(!Code %in% pitcodes)
batters <- rbind(batters, batnoupdate)
pitchers <- rbind(pitchers, pitnoupdate)
write_csv(batters, "batters_full_20.csv")
write_csv(pitchers, "pitchers_full_20.csv")
# Team Stats
teamsbat <- batters %>% select(Team, BB, IBB, HBP, X1B, X2B, X3B, HR, PA, R)
teamsbat <- aggregate(.~Team, teamsbat, sum)
teamsbat <- teamsbat %>% left_join(pf, by = "Team")
teamsbat$wOBA <- (wBB*(teamsbat$BB-teamsbat$IBB) + wHBP*teamsbat$HBP + w1B*teamsbat$X1B + w2B*teamsbat$X2B + w3B*teamsbat$X3B + wHR*teamsbat$HR)/(teamsbat$PA)
teamsbat$wRAA <- ((teamsbat$wOBA-lgwOBA)/wOBAscale)*teamsbat$PA
teamsbat$wRCplus <- (((teamsbat$wRAA/teamsbat$PA + lgRPA) + (lgRPA - teamsbat$PF*lgRPA))/(lgRPA))*100
teamspit <- pitchers %>% select(Team, ER, IP, HR, BB, HB, SO)
teamspit <- aggregate(.~Team, teamspit, sum)
tpER <- sum(teamspit$ER)
tpIP <- sum(teamspit$IP)
tpHR <- sum(teamspit$HR)
tpBB <- sum(teamspit$BB)
tpHBP <- sum(teamspit$HB)
tpSO <- sum(teamspit$SO)
tpERA <- (tpER/tpIP)*9
tFIPcon <- tpERA - (((13*tpHR)+(3*(tpBB+tpHBP))-(2*tpSO))/tpIP)
teamspit$FIP <- ((13*teamspit$HR)+(3*(teamspit$BB+teamspit$HB))-(2*teamspit$SO))/teamspit$IP + tFIPcon
teamstats <- teamsbat %>% left_join(teamspit, by = "Team") %>% select(Team, wRCplus, FIP)
#teamstats <- teamstats %>% arrange(desc(wRCplus))
#teamstats$batrank <- 1:10
#teamstats$batrank <- paste0("(",teamstats$batrank,")")
#teamstats$wRCplus <- paste0(round(teamstats$wRCplus,1)," (",teamstats$batrank,")")
#teamstats <- teamstats %>% arrange(FIP)
#teamstats$pitrank <- 1:10
#teamstats$pitrank <- paste0("(",teamstats$pitrank,")")
#teamstats$FIP <- paste0(round(teamstats$FIP,2)," (",teamstats$pitrank,")")
#teamstats <- teamstats %>% select(Team, wRCplus, FIP)
write_csv(teamstats, "teamstats.csv")
### Since 2019
batters <- read_csv("batters_full_20.csv")
pitchers <- read_csv("pitchers_full_20.csv")
batters19 <- read_csv("batrawstat.csv")
batters19$Url <- "-"
batters19$Born <- "-"
batters19$Age <- "_"
batters19 <- batters19 %>% select(names(batters)) %>% filter(Year == 2019)
pitchers19 <- read_csv("pitrawstat.csv")
pitchers19$Url <- "-"
pitchers19$Born <- "-"
pitchers19$Age <- "_"
pitchers19 <- pitchers19 %>% select(names(pitchers)) %>% filter(Year == 2019)
batters19since <- rbind(batters,batters19)
pitchers19since <- rbind(pitchers,pitchers19)
# Summarize and fix batters
batters19since <-  batters19since %>% select(-Url, -Name, -Position, -Number, -KName, -Born, -Age, -PF)
batters19since <- batters19since %>% group_by(Code) %>%
summarise_at(vars(G:WAR), sum, na.rm = TRUE)
basics <- batters19 %>% select(Code, Name, KName, Position, Team, Url)
batters19since <- batters19since %>% left_join(basics, by = "Code")
batters19since <- batters19since[!is.na(batters19since$Name),]
batters19since$Year <- "Since 2019"
batters19since$Age <- "_"
batters19since <- batters19since %>% left_join(pf, by = "Team")
# Summarize and fix pitchers
pitchers19since <-  pitchers19since %>% select(-CG.SHO., -Url, -Name, -Position, -Number, -KName, -Born, -Age, -PF)
pitchers19since <- unique(pitchers19since)
pitchers19since$IP2 <- as.numeric(pitchers19since$IP2)
pitchers19since <- pitchers19since %>% group_by(Code) %>%
summarise_at(vars(G:WAR), sum, na.rm = TRUE)
basics <- pitchers19 %>% select(Code, Name, KName, Position, Team, Url)
pitchers19since <- pitchers19since %>% left_join(basics, by = "Code")
pitchers19since <- pitchers19since[!is.na(pitchers19since$Name),]
pitchers19since$Year <- "Since 2019"
pitchers19since$Age <- "_"
pitchers19since <- pitchers19since %>% left_join(pf, by = "Team")
pitchers19since$IP <- as.character(pitchers19since$IP2)
pitchers19since <- pitchers19since %>% separate(IP, c("a", "b"))
pitchers19since$b[is.na(pitchers19since$b)] <- 0
pitchers19since$IP <- as.numeric(pitchers19since$a) + as.numeric(pitchers19since$b)*(1/3)
pitchers19since$IP2 <- as.character(pitchers19since$IP)
pitchers19since <- pitchers19since %>% select(-a, -b)
pitchers19since <- pitchers19since %>% separate(IP2, c("a", "b"))
pitchers19since$b[is.na(pitchers19since$b)] <- 0
pitchers19since$b <-paste0("0.",pitchers19since$b)
pitchers19since$b <- as.numeric(pitchers19since$b)
pitchers19since$b <- pitchers19since$b * 3
pitchers19since$b <- as.character(round(pitchers19since$b))
pitchers19since$IP2 <- paste0(pitchers19since$a,".",pitchers19since$b)
pitchers19since <- pitchers19since %>% select(-a, -b)
# Batter stats (since 2019)
batters19since$wOBA <- (wBB*(batters19since$BB-batters19since$IBB) + wHBP*batters19since$HBP + w1B*batters19since$X1B + w2B*batters19since$X2B + w3B*batters19since$X3B + wHR*batters19since$HR)/(batters19since$PA)
batters19since$wRAA <- ((batters19since$wOBA-lgwOBA)/wOBAscale)*batters19since$PA
batters19since$wRCplus <- (((batters19since$wRAA/batters19since$PA + lgRPA19) + (lgRPA19 - batters19since$PF*lgRPA19))/(lgRPA19))*100
batters19since$BBpct <- (batters19since$BB/batters19since$PA)*100
batters19since$SOpct <- (batters19since$SO/batters19since$PA)*100
batters19since$OBP <- (batters19since$H + batters19since$BB + batters19since$HBP)/(batters19since$PA)
batters19since$SLG <- (batters19since$X1B + (2*batters19since$X2B) + (3*batters19since$X3B) + (4*batters19since$HR))/batters19since$AB
batters19since$OPS <- batters19since$OBP + batters19since$SLG
batters19since$BA <- batters19since$H/batters19since$AB
batters19since$ISO <- batters19since$SLG-batters19since$BA
batters19since$BABIP <- (batters19since$H - batters19since$HR)/(batters19since$AB - batters19since$SO - batters19since$HR + batters19since$SF)
## Pitcher Stats
pitchers19since$FIP <- ((13*pitchers19since$HR)+(3*(pitchers19since$BB+pitchers19since$HB))-(2*pitchers19since$SO))/pitchers19since$IP + FIPcon
pitchers19since$BABIP <- (pitchers19since$H - pitchers19since$HR)/(pitchers19since$TBF - pitchers19since$BB - pitchers19since$IBB - pitchers19since$HB - pitchers19since$SO - pitchers19since$HR)
pitchers19since$SO9 <- pitchers19since$SO/pitchers19since$IP*9
pitchers19since$BB9 <- pitchers19since$BB/pitchers19since$IP*9
pitchers19since$HR9 <- pitchers19since$HR/pitchers19since$IP*9
pitchers19since$ERA <- (pitchers19since$ER/pitchers19since$IP)*9
batters.since19 <- batters19since %>% select(Year, Name, KName, Age, Position, Team, G, PA, HR, OPS, BBpct, SOpct, ISO, BABIP, wRCplus, WAR, Code, Url)
pitchers.since19 <- pitchers19since %>% select(Year, Name, KName, Age, Position, Team, G, GS, IP2, SO9, BB9, HR9, BABIP, ERA, FIP, WAR, Code, Url)
## Reduce
batters.20 <- batters %>% select(Year, Name, KName, Age, Position, Team, G, PA, HR, OPS, BBpct, SOpct, ISO, BABIP, wRCplus, WAR, Code, Url)
pitchers.20 <- pitchers %>% select(Year, Name, KName, Age, Position, Team, G, GS, IP2, SO9, BB9, HR9, BABIP, ERA, FIP, WAR, Code, Url)
## Combine With Pre-2020 Stats
batters.1019 <- read_csv("batters_simple_10to19.csv")
pitchers.1019 <- read_csv("pitchers_simple_10to19.csv")
batters.all <- rbind(batters.20, batters.1019)
pitchers.all <- rbind(pitchers.20, pitchers.1019)
batters.all <- rbind(batters.all,batters.since19)
pitchers.all <- rbind(pitchers.all,pitchers.since19)
batters.all <- unique(batters.all)
pitchers.all <- unique(pitchers.all)
## Save
write_csv(batters.all, "batters_simple.csv")
write_csv(pitchers.all, "pitchers_simple.csv")
## Start Site
setwd("~/Google Drive/KBO/kbofancystats")
serve_site()
## Write and Update Pages
setwd("~/Google Drive/KBO/kbofancystats/content/teams")
batters <- read_csv("~/Google Drive/KBO/batters_simple.csv")
pitchers <- read_csv("~/Google Drive/KBO/pitchers_simple.csv")
list <- batters %>% filter(Year == "2020") %>% select(Team)
list <- unique(list$Team)
batleaders <- batters %>% select(Name, Position, WAR, Year, Team)
pitleaders <- pitchers %>% select(Name, Position, WAR, Year, Team)
leaders <- rbind(batleaders, pitleaders)
tops <- leaders %>% filter(Year == "2020") %>% group_by(Team) %>% top_n(3, WAR)
tops <- tops[order(-tops$WAR),]
tops$WAR <- round(tops$WAR, 2)
current.elos <- read_csv("~/Google Drive/KBO/currentelos.csv")
current.elos$Elo <- round(current.elos$Elo, 0)
cities <- read_csv("~/Google Drive/KBO/teamcities.csv")
tops <- tops %>% left_join(cities, by = "Team")
for (i in list){
top <- tops %>% filter(Team == i)
top3 <- paste0("WAR Leader | ",top[1,1],", ",top[1,2],": ",top[1,3])
elo <- current.elos %>% filter(Team == i)
elo <- paste0(top[1,6]," | Current Elo: ",elo[1,2]," (",elo[1,3],")")
a <- "---"
b <- 'date: "2020-03-31"'
c <- paste0("summary: ","'", top3,"'")
d <- paste0("title: ","'", i,"'")
da <- paste0("subtitle: ","'", elo,"'")
db <- "image:"
dc <- "  preview_only: true"
ea <- "**2020** | [Batting](#batting) | [Pitching](#pitching) | "
eaa <- paste0("**2019** | [Batting](https://www.kbofancystats.com/2019-stats/", gsub("[[:space:]]", "", i),"/#batting) | [Pitching](https://www.kbofancystats.com/2019-stats/",gsub("[[:space:]]", "", i),"/#pitching) | ")
eb <- " "
e <- "### 2020 Batting Stats {#batting}"
f <- "```{r pressure, echo=F,warning=FALSE,message=FALSE}"
g <- "library(tidyverse)"
j <- "library(kableExtra)"
k <- 'batters <- read_csv("~/Google Drive/KBO/batters_simple.csv")'
l <- "batters <- batters[complete.cases(batters),]"
m <- "batters$Age <- as.numeric(batters$Age)"
n <- paste0('d <- batters %>% filter(Team == "', i, '") %>% filter(Year == "2020") %>% select(-Team, -Year, -KName, -Url)')
o <- "d <- d[order(-d$WAR),]"
p <- 'd$Name <- paste0("[", d$Name, "](/players/", d$Code, ")")'
q <- 'kable(d, digits = c(0,0,0,0,0,0,3,1,1,3,3,1,2), col.names = c("Name","Age","Pos","G","PA","HR","OPS","BB%","SO%","ISO","BABIP","wRC+","WAR")) %>% kable_styling(bootstrap_options = c("striped", "hover"), fixed_thead = T) %>%column_spec(1, bold = T, border_right = F)'
r <- "```"
rr <- "***"
s <- "### 2020 Pitching Stats {#pitching}"
t <- "```{r, echo=F,warning=FALSE,message=FALSE}"
u <- 'pitchers <- read_csv("~/Google Drive/KBO/pitchers_simple.csv")'
v <- 'pitchers <- pitchers[complete.cases(pitchers),]'
w <- paste0('d <- pitchers %>% filter(Team == "', i, '") %>% filter(Year == "2020") %>% select(-Team, -Year, -KName, -Position, -Url)')
x <- 'd <- d[order(-d$WAR),]'
y <- 'd$Name <- paste0("[", d$Name, "](/players/", d$Code, ")")'
ab <- "d <- d %>% select(-Code)"
z <- 'kable(d, digits = c(0,0,0,0,1,1,1,1,3,3,2,2), col.names = c("Name","Age","G","GS","IP","K/9","BB/9","HR/9","BABIP","ERA","FIP","WAR")) %>% kable_styling(bootstrap_options = c("striped", "hover"), fixed_thead = T) %>% column_spec(1, bold = T, border_right = F)'
teamwd <- paste0("~/Google Drive/KBO/kbofancystats/content/teams/",gsub("[[:space:]]", "", i))
setwd(teamwd)
file <- "index.rmd"
writeLines(c(a,b,c,d,da,db,dc,a,ea,eaa,eb,rr,e,f,g,j,k,l,m,n,o,p,ab,q,r,rr,s,t,u,v,w,x,y,ab,z,r), file)
}
setwd("~/Google Drive/KBO/kbofancystats/content/players")
#list <- batters %>% select(Name, Code, KName, Team, Position, Url)
#list<-unique(list)
#list <- list %>% map_df(rev)
list <- listbat
for (i in 1:nrow(list)){
title <- paste0(list$Name[i], " | ", list$KName[i])
subtitle <- paste0(list$Team[i], " | ", list$Position[i])
id <- list$Code[i]
a <- "---"
b <- paste0('title: ', title)
bb <- paste0('subtitle: ', subtitle)
bc <- 'summary: "Career Stats"'
c <- "```{r , echo=F,warning=FALSE,message=FALSE}"
f <- "library(kableExtra)"
g <- 'd <- read.csv("~/Google Drive/KBO/batters_simple.csv")'
j <- paste0('d <- subset(d, Code == "', id, '", select = c(-Name, -KName, -Position, -Code, -Url))')
k <- 'd <- d[order(-d$Year),]'
k2 <- 'd$Team <- paste0("[", d$Team, "](/teams/", gsub("[[:space:]]", "", d$Team), ")")'
l <- 'kable(d, digits = c(0,0,0,0,0,0,3,1,1,3,3,1,2), row.names = FALSE, col.names = c("Season","Age","Team","G","PA","HR","OPS","BB%","SO%","ISO","BABIP","wRC+","WAR")) %>% kable_styling(bootstrap_options = c("striped", "hover"), fixed_thead = T)'
m <- "```"
n1 <- "<br>"
n2 <- paste0("**More** | [myKBO Page](",list$Url[i],")")
file <- paste0(gsub("[[:space:]]", "", id), ".rmd")
writeLines(c(a,b,bb,bc,a,c,f,g,j,k2,l,m,n1,n2), file)
}
setwd("~/Google Drive/KBO/kbofancystats/content/players")
list <- pitchers %>% select(Name, Code, KName, Team, Position, Url)
list <- unique(list)
list <- list %>% map_df(rev)
#list <- listpit
for (i in 1:nrow(list)){
title <- paste0(list$Name[i], " | ", list$KName[i])
subtitle <- paste0(list$Team[i], " | ", list$Position[i])
id <- list$Code[i]
a <- "---"
b <- paste0('title: ', title)
bb <- paste0('subtitle: ', subtitle)
bc <- 'summary: "Career Stats"'
c <- "```{r , echo=F,warning=FALSE,message=FALSE}"
f <- "library(kableExtra)"
g <- 'd <- read.csv("~/Google Drive/KBO/pitchers_simple.csv")'
j <- paste0('d <- subset(d, Code == "', id, '", select = c(-Name, -KName, -Position, -Code, -Url))')
jj <- 'd <- subset(d, Year > 2013)'
k <- 'd <- d[order(-d$Year),]'
k2 <- 'd$Team <- paste0("[", d$Team, "](/teams/", gsub("[[:space:]]", "", d$Team), ")")'
l <- 'kable(d, digits = c(0,0,0,0,0,1,1,1,1,3,2,2,2), row.names = FALSE, col.names = c("Season","Age","Team","G","GS","IP","K/9","BB/9","HR/9","BABIP","ERA","FIP","WAR")) %>% kable_styling(bootstrap_options = c("striped", "hover"), fixed_thead = T)'
m <- "```"
n1 <- "<br>"
n2 <- paste0("**More** | [myKBO Page](",list$Url[i],")")
file <- paste0(gsub("[[:space:]]", "", id), ".rmd")
writeLines(c(a,b,bb,bc,a,c,f,g,j,jj,k2,l,m,n1,n2), file)
}
# Leaders Homepage Widget
batters <- read_csv("~/Google Drive/KBO/batters_simple.csv")
pitchers <- read_csv("~/Google Drive/KBO/pitchers_simple.csv")
batters <- unique(batters)
pitchers <- unique(pitchers)
batters <- batters %>% filter(Year == 2020)
pitchers <- pitchers %>% filter(Year == 2020)
batwar <- batters %>% select(Code,Name,Team,Position,WAR)
pitwar <- pitchers %>% select(Code,Name,Team,Position,WAR)
d <- rbind(batwar,pitwar)
d <- d %>% arrange(desc(WAR))
d <- d[1:10,]
a <- '+++'
b <- 'widget = "blank"'
c <- 'headless = true'
dd <- 'active = true'
e <- 'weight = 2'
f <- 'title = "WAR Leaders"'
g <- '[design.spacing]'
h <- 'padding = ["50px", "25%", "0px", "25%"]'
ii <- '[design.background]'
j <- 'color = "white"'
k <- '+++'
l <- '| Rank | Name | Team | Position | WAR |'
m <- '| :---: | --- | --- | ------- | -- |'
war1 <- paste0('| 1 | [**',as.character(d[1,2]),'**](/players/',as.character(d[1,1]),') | [',as.character(d[1,3]),'](/teams/',gsub("[[:space:]]", "", as.character(d[1,3])), ') | ', as.character(d[1,4]),' | ',sprintf('%.2f',d[1,5]),' |')
war2 <- paste0('| 2 | [**',as.character(d[2,2]),'**](/players/',as.character(d[2,1]),') | [',as.character(d[2,3]),'](/teams/',gsub("[[:space:]]", "", as.character(d[2,3])), ') | ', as.character(d[2,4]),' | ',sprintf('%.2f',d[2,5]),' |')
war3 <- paste0('| 3 | [**',as.character(d[3,2]),'**](/players/',as.character(d[3,1]),') | [',as.character(d[3,3]),'](/teams/',gsub("[[:space:]]", "", as.character(d[3,3])), ') | ', as.character(d[3,4]),' | ',sprintf('%.2f',d[3,5]),' |')
war4 <- paste0('| 4 | [**',as.character(d[4,2]),'**](/players/',as.character(d[4,1]),') | [',as.character(d[4,3]),'](/teams/',gsub("[[:space:]]", "", as.character(d[4,3])), ') | ', as.character(d[4,4]),' | ',sprintf('%.2f',d[4,5]),' |')
war5 <- paste0('| 5 | [**',as.character(d[5,2]),'**](/players/',as.character(d[5,1]),') | [',as.character(d[5,3]),'](/teams/',gsub("[[:space:]]", "", as.character(d[5,3])), ') | ', as.character(d[5,4]),' | ',sprintf('%.2f',d[5,5]),' |')
setwd("~/Google Drive/KBO/kbofancystats/content/home")
writeLines(c(a,b,c,dd,e,f,g,h,ii,j,k,l,m,war1,war2,war3,war4,war5), "blank.md")
# Refresh Pages
render("~/Google Drive/KBO/kbofancystats/content/leaders.Rmd")
render("~/Google Drive/KBO/kbofancystats/content/leaders-since-2019.Rmd")
render("~/Google Drive/KBO/kbofancystats/content/elo.Rmd")
