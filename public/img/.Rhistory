# Collapse by community or municipality
#communities <- st_make_valid(districts) %>% group_by(NCA) %>% summarise(bt_count = sum(bt_count)) %>% arrange(desc(obs))
municipalities <- st_make_valid(districts) %>% group_by(NMUN) %>% summarise(bt_count = sum(bt_count)) %>% summarise(tw_count = sum(tw_count))
municipalities <- st_make_valid(districts) %>% group_by(NMUN) %>% summarise(bt_count = sum(bt_count))
munitweets <- st_make_valid(districts) %>% group_by(NMUN) %>% summarise(tw_count = sum(tw_count))
municipalities <- municipalities %>% left_join(munitweets, by = "NMUN")
municipalities <- st_make_valid(districts) %>% group_by(NMUN) %>% summarise_at(vars(bt_count, tw_count), sum)
municipalities
municipalities$bt_pct <- municipalities$bt_count/sum(municipalities$bt_count)
municipalities$tw_pct <- municipalities$tw_count/sum(municipalities$tw_count)
municipalities$more_tweets <- municipalities$tw_pct - municipalities$bt_pct
View(municipalities)
communities <- st_make_valid(districts) %>% group_by(NCA) %>% summarise_at(vars(bt_count, tw_count), sum)
communities$bt_pct <- communities$bt_count/sum(communities$bt_count)
communities$tw_pct <- communities$tw_count/sum(communities$tw_count)
communities$more_tweets <- communities$tw_pct - communities$bt_pct
View(communities)
communities
communities %>% arrange(more_tweets)
municipalities %>% arrange(more_tweets)
# CSV exports
write_csv(communities, "~/research/communities.csv")
write_csv(municipalities, "~/research/municipalities.csv")
municipalities %>% arrange(desc(more_tweets)
)
library(tidyverse)
library(rvest)
library(blogdown)
library(rmarkdown)
library(scales)
setwd("~/Google Drive/KBO/kbofancystats")
serve_site()
library(tidyverse)
library(kableExtra)
batters <- read.csv("~/Google Drive/KBO/batters_simple.csv")
batters <- batters[complete.cases(batters),]
batters$Age <- as.numeric(batters$Age)
View(batters)
d <- batters %>% filter(Team == "LG Twins") %>% filter(Year == "2020") %>% select(-Team, -Year, -KName, -Url)
d <- d[order(-d$WAR),]
d$Name <- paste0("[", d$Name, "](/players/", d$Code, ")")
d <- d %>% select(-Code)
kable(d, digits = c(0,0,0,0,0,0,3,1,1,3,3,1,2), col.names = c("Name","Age","Pos","G","PA","HR","OPS","BB%","SO%","ISO","BABIP","wRC+","WAR")) %>% kable_styling(bootstrap_options = c("striped", "hover"), fixed_thead = T) %>%column_spec(1, bold = T, border_right = F)
kable(d, digits = c(0,0,0,0,0,0,3,1,1,3,3,1,2), row.names = NA, col.names = c("Name","Age","Pos","G","PA","HR","OPS","BB%","SO%","ISO","BABIP","wRC+","WAR")) %>% kable_styling(bootstrap_options = c("striped", "hover"), fixed_thead = T) %>%column_spec(1, bold = T, border_right = F)
kable(d, digits = c(0,0,0,0,0,0,3,1,1,3,3,1,2), row.names = NA, col.names = c("Name","Age","Pos","G","PA","HR","OPS","BB%","SO%","ISO","BABIP","wRC+","WAR")) %>% kable_styling(bootstrap_options = c("striped", "hover"), fixed_thead = T) %>%column_spec(1, bold = T, border_right = F)
kable(d, row.names = NA, digits = c(0,0,0,0,0,0,3,1,1,3,3,1,2), col.names = c("Name","Age","Pos","G","PA","HR","OPS","BB%","SO%","ISO","BABIP","wRC+","WAR")) %>% kable_styling(bootstrap_options = c("striped", "hover"), fixed_thead = T) %>% column_spec(1, bold = T, border_right = F)
1=1
## Write and Update Pages
setwd("~/Google Drive/KBO/kbofancystats/content/teams")
batters <- read_csv("~/Google Drive/KBO/batters_simple.csv")
pitchers <- read_csv("~/Google Drive/KBO/pitchers_simple.csv")
list <- batters %>% filter(Year == "2020") %>% select(Team)
list <- unique(list$Team)
batleaders <- batters %>% select(Name, Position, WAR, Year, Team)
pitleaders <- pitchers %>% select(Name, Position, WAR, Year, Team)
leaders <- rbind(batleaders, pitleaders)
tops <- leaders %>% filter(Year == "2020") %>% group_by(Team) %>% top_n(3, WAR)
tops <- tops[order(-tops$WAR),]
tops$WAR <- round(tops$WAR, 2)
current.elos <- read_csv("~/Google Drive/KBO/currentelos.csv")
current.elos$Elo <- round(current.elos$Elo, 0)
cities <- read_csv("~/Google Drive/KBO/teamcities.csv")
tops <- tops %>% left_join(cities, by = "Team")
for (i in list){
top <- tops %>% filter(Team == i)
top3 <- paste0("WAR Leader | ",top[1,1],", ",top[1,2],": ",top[1,3])
elo <- current.elos %>% filter(Team == i)
elo <- paste0(top[1,6]," | Current Elo: ",elo[1,2]," (",elo[1,3],")")
a <- "---"
b <- 'date: "2020-03-31"'
c <- paste0("summary: ","'", top3,"'")
d <- paste0("title: ","'", i,"'")
da <- paste0("subtitle: ","'", elo,"'")
db <- "image:"
dc <- "  preview_only: true"
ea <- "**2020** | [Batting](#batting) | [Pitching](#pitching) | "
eaa <- paste0("**2019** | [Batting](https://www.kbofancystats.com/2019-stats/", gsub("[[:space:]]", "", i),"/#batting) | [Pitching](https://www.kbofancystats.com/2019-stats/",gsub("[[:space:]]", "", i),"/#pitching) | ")
eb <- " "
e <- "### 2020 Batting Stats {#batting}"
f <- "```{r pressure, echo=F,warning=FALSE,message=FALSE}"
g <- "library(tidyverse)"
j <- "library(kableExtra)"
k <- 'batters <- read.csv("~/Google Drive/KBO/batters_simple.csv")'
l <- "batters <- batters[complete.cases(batters),]"
m <- "batters$Age <- as.numeric(batters$Age)"
n <- paste0('d <- batters %>% filter(Team == "', i, '") %>% filter(Year == "2020") %>% select(-Team, -Year, -KName, -Url)')
o <- "d <- d[order(-d$WAR),]"
p <- 'd$Name <- paste0("[", d$Name, "](/players/", d$Code, ")")'
q <- 'kable(d, row.names = NA, digits = c(0,0,0,0,0,0,3,1,1,3,3,1,2), col.names = c("Name","Age","Pos","G","PA","HR","OPS","BB%","SO%","ISO","BABIP","wRC+","WAR")) %>% kable_styling(bootstrap_options = c("striped", "hover"), fixed_thead = T) %>%column_spec(1, bold = T, border_right = F)'
r <- "```"
rr <- "***"
s <- "### 2020 Pitching Stats {#pitching}"
t <- "```{r, echo=F,warning=FALSE,message=FALSE}"
u <- 'pitchers <- read.csv("~/Google Drive/KBO/pitchers_simple.csv")'
v <- 'pitchers <- pitchers[complete.cases(pitchers),]'
w <- paste0('d <- pitchers %>% filter(Team == "', i, '") %>% filter(Year == "2020") %>% select(-Team, -Year, -KName, -Position, -Url)')
x <- 'd <- d[order(-d$WAR),]'
y <- 'd$Name <- paste0("[", d$Name, "](/players/", d$Code, ")")'
ab <- "d <- d %>% select(-Code)"
z <- 'kable(d, row.names = NA, digits = c(0,0,0,0,1,1,1,1,3,3,2,2), col.names = c("Name","Age","G","GS","IP","K/9","BB/9","HR/9","BABIP","ERA","FIP","WAR")) %>% kable_styling(bootstrap_options = c("striped", "hover"), fixed_thead = T) %>% column_spec(1, bold = T, border_right = F)'
teamwd <- paste0("~/Google Drive/KBO/kbofancystats/content/teams/",gsub("[[:space:]]", "", i))
setwd(teamwd)
file <- "index.rmd"
writeLines(c(a,b,c,d,da,db,dc,a,ea,eaa,eb,rr,e,f,g,j,k,l,m,n,o,p,ab,q,r,rr,s,t,u,v,w,x,y,ab,z,r), file)
}
serve_site()
setwd("~/Google Drive/KBO/kbofancystats/content/teams")
batters <- read_csv("~/Google Drive/KBO/batters_simple.csv")
pitchers <- read_csv("~/Google Drive/KBO/pitchers_simple.csv")
list <- batters %>% filter(Year == "2020") %>% select(Team)
list <- unique(list$Team)
batleaders <- batters %>% select(Name, Position, WAR, Year, Team)
pitleaders <- pitchers %>% select(Name, Position, WAR, Year, Team)
leaders <- rbind(batleaders, pitleaders)
tops <- leaders %>% filter(Year == "2020") %>% group_by(Team) %>% top_n(3, WAR)
tops <- tops[order(-tops$WAR),]
tops$WAR <- round(tops$WAR, 2)
current.elos <- read_csv("~/Google Drive/KBO/currentelos.csv")
current.elos$Elo <- round(current.elos$Elo, 0)
cities <- read_csv("~/Google Drive/KBO/teamcities.csv")
tops <- tops %>% left_join(cities, by = "Team")
for (i in list){
top <- tops %>% filter(Team == i)
top3 <- paste0("WAR Leader | ",top[1,1],", ",top[1,2],": ",top[1,3])
elo <- current.elos %>% filter(Team == i)
elo <- paste0(top[1,6]," | Current Elo: ",elo[1,2]," (",elo[1,3],")")
a <- "---"
b <- 'date: "2020-03-31"'
c <- paste0("summary: ","'", top3,"'")
d <- paste0("title: ","'", i,"'")
da <- paste0("subtitle: ","'", elo,"'")
db <- "image:"
dc <- "  preview_only: true"
ea <- "**2020** | [Batting](#batting) | [Pitching](#pitching) | "
eaa <- paste0("**2019** | [Batting](https://www.kbofancystats.com/2019-stats/", gsub("[[:space:]]", "", i),"/#batting) | [Pitching](https://www.kbofancystats.com/2019-stats/",gsub("[[:space:]]", "", i),"/#pitching) | ")
eb <- " "
e <- "### 2020 Batting Stats {#batting}"
f <- "```{r pressure, echo=F,warning=FALSE,message=FALSE}"
g <- "library(tidyverse)"
j <- "library(kableExtra)"
k <- 'batters <- read_csv("~/Google Drive/KBO/batters_simple.csv")'
l <- "batters <- batters[complete.cases(batters),]"
m <- "batters$Age <- as.numeric(batters$Age)"
n <- paste0('d <- batters %>% filter(Team == "', i, '") %>% filter(Year == "2020") %>% select(-Team, -Year, -KName, -Url)')
o <- "d <- d[order(-d$WAR),]"
p <- 'd$Name <- paste0("[", d$Name, "](/players/", d$Code, ")")'
q <- 'kable(d, digits = c(0,0,0,0,0,0,3,1,1,3,3,1,2), col.names = c("Name","Age","Pos","G","PA","HR","OPS","BB%","SO%","ISO","BABIP","wRC+","WAR")) %>% kable_styling(bootstrap_options = c("striped", "hover"), fixed_thead = T) %>%column_spec(1, bold = T, border_right = F)'
r <- "```"
rr <- "***"
s <- "### 2020 Pitching Stats {#pitching}"
t <- "```{r, echo=F,warning=FALSE,message=FALSE}"
u <- 'pitchers <- read_csv("~/Google Drive/KBO/pitchers_simple.csv")'
v <- 'pitchers <- pitchers[complete.cases(pitchers),]'
w <- paste0('d <- pitchers %>% filter(Team == "', i, '") %>% filter(Year == "2020") %>% select(-Team, -Year, -KName, -Position, -Url)')
x <- 'd <- d[order(-d$WAR),]'
y <- 'd$Name <- paste0("[", d$Name, "](/players/", d$Code, ")")'
ab <- "d <- d %>% select(-Code)"
z <- 'kable(d, digits = c(0,0,0,0,1,1,1,1,3,3,2,2), col.names = c("Name","Age","G","GS","IP","K/9","BB/9","HR/9","BABIP","ERA","FIP","WAR")) %>% kable_styling(bootstrap_options = c("striped", "hover"), fixed_thead = T) %>% column_spec(1, bold = T, border_right = F)'
teamwd <- paste0("~/Google Drive/KBO/kbofancystats/content/teams/",gsub("[[:space:]]", "", i))
setwd(teamwd)
file <- "index.rmd"
writeLines(c(a,b,c,d,da,db,dc,a,ea,eaa,eb,rr,e,f,g,j,k,l,m,n,o,p,ab,q,r,rr,s,t,u,v,w,x,y,ab,z,r), file)
}
library(tidyverse)
library(rvest)
library(blogdown)
library(rmarkdown)
library(scales)
setwd("~/Google Drive/KBO")
## Blank Data Sets
pitchers <- NA
batters <- NA
## List of recent games
game.links <- read_html("https://mykbostats.com/") %>% html_nodes("table") %>% html_nodes("a") %>% html_attr("href")
game.links <- game.links[str_detect(game.links, "games")]
## List of recent games
game.links <- read_html("https://mykbostats.com/") %>% html_nodes("table") %>% html_nodes("a") %>% html_attr("href")
## List of recent games
game.links <- read_html("https://mykbostats.com/") %>%  html_nodes("a") %>% html_attr("href")
game.links <- game.links[str_detect(game.links, "games")]
## Scrape Daily Box Scores for Active Players
all.links <- NA
for (i in game.links){
print(i)
url <- paste0("https://mykbostats.com",i)
links <- read_html(url) %>% html_nodes("table") %>% html_nodes("a") %>% html_attr("href")
links <- links[str_detect(links, "players")]
all.links <- append(all.links, links)
}
## List of recent games
game.links <- read_html("https://mykbostats.com/") %>%  html_nodes("a") %>% html_attr("href")
game.links <- game.links[str_detect(game.links, "games")]
game.links
game.links <- complete.cases(game.links)
complete.cases(game.links)
game.links <- game.links[str_detect(game.links, "games")]
## List of recent games
game.links <- read_html("https://mykbostats.com/") %>%  html_nodes("a") %>% html_attr("href")
game.links <- game.links[str_detect(game.links, "games")]
library(tidyverse)
library(rvest)
library(blogdown)
library(rmarkdown)
library(scales)
setwd("~/Google Drive/KBO")
## Blank Data Sets
pitchers <- NA
batters <- NA
## List of recent games
game.links <- read_html("https://mykbostats.com/") %>%  html_nodes("a") %>% html_attr("href")
game.links <- game.links[str_detect(game.links, "games")]
game.links <- game.links[2:length(game.links)]
## Scrape Daily Box Scores for Active Players
all.links <- NA
for (i in game.links){
print(i)
url <- paste0("https://mykbostats.com",i)
links <- read_html(url) %>% html_nodes("table") %>% html_nodes("a") %>% html_attr("href")
links <- links[str_detect(links, "players")]
all.links <- append(all.links, links)
}
all.links <- all.links[2:length(all.links)]
all.links <- unique(all.links)
i <- 26
url <- paste0("https://mykbostats.com",all.links[i])
site <- read_html(url)
player <- site %>% html_table(fill = T)
player <- as.data.frame(player[1])
player <- player[1,]
player$Url <- url
player$Code <- gsub("\\D", "", url)
## Add Name, Position, Etc.
d <- site %>%
html_node("h1") %>% html_text()
d <- gsub("[\r\n]", "", d)
d <- strsplit(d, "[|()#]")
player$Name <- substring(d[[1]][1], first = 1, last = (nchar(d[[1]][1]))-1)
player$Position <- substring(d[[1]][5], first = 2)
player$Number <- substring(d[[1]][4], first = 1, last = (nchar(d[[1]][4]))-1)
player$KName <- d[[1]][2]
View(player)
## Add birthyear
d <- site %>% html_text()
year <- sub("age .*", "", d)
year <- str_sub(year,-6,-3)
year <- sub("age .*", "", d)
year
year <- sub("years old .*", "", d)
year
year <- sub("years .*", "", d)
year
year <- str_sub(year,-6,-3)
year <- sub("years .*", "", d)
year <- str_sub(year,-9,-6)
player$Born <- year
## Add To Batter or Pitcher Data
if (length(player) == 35) {
pitchers <- rbind(pitchers, player)
} else {
batters <- rbind(batters, player)
}
View(pitchers)
i <- 77
url <- paste0("https://mykbostats.com",all.links[i])
site <- read_html(url)
player <- site %>% html_table(fill = T)
player <- as.data.frame(player[1])
player <- player[1,]
player$Url <- url
player$Code <- gsub("\\D", "", url)
## Add Name, Position, Etc.
d <- site %>%
html_node("h1") %>% html_text()
d <- gsub("[\r\n]", "", d)
d <- strsplit(d, "[|()#]")
player$Name <- substring(d[[1]][1], first = 1, last = (nchar(d[[1]][1]))-1)
player$Position <- substring(d[[1]][5], first = 2)
player$Number <- substring(d[[1]][4], first = 1, last = (nchar(d[[1]][4]))-1)
player$KName <- d[[1]][2]
## Add birthyear
d <- site %>% html_text()
year <- sub("years .*", "", d)
year <- str_sub(year,-9,-6)
player$Born <- year
## Add To Batter or Pitcher Data
if (length(player) == 35) {
pitchers <- rbind(pitchers, player)
} else {
batters <- rbind(batters, player)
}
i<-95
url <- paste0("https://mykbostats.com",all.links[i])
site <- read_html(url)
player <- site %>% html_table(fill = T)
player <- as.data.frame(player[1])
player <- player[1,]
player$Url <- url
player$Code <- gsub("\\D", "", url)
## Add Name, Position, Etc.
d <- site %>%
html_node("h1") %>% html_text()
d <- gsub("[\r\n]", "", d)
d <- strsplit(d, "[|()#]")
player$Name <- substring(d[[1]][1], first = 1, last = (nchar(d[[1]][1]))-1)
player$Position <- substring(d[[1]][5], first = 2)
player$Number <- substring(d[[1]][4], first = 1, last = (nchar(d[[1]][4]))-1)
player$KName <- d[[1]][2]
## Add birthyear
d <- site %>% html_text()
year <- sub("years .*", "", d)
year <- str_sub(year,-9,-6)
player$Born <- year
## Add To Batter or Pitcher Data
if (length(player) == 35) {
pitchers <- rbind(pitchers, player)
} else {
batters <- rbind(batters, player)
}
library(blogdown)
library(rmarkdown)
library(tidyverse)
library(rvest)
library(elo)
library(scales)
setwd("~/Google Drive/KBO")
## Scrape 2020 Schedule and Results
links <- read_csv("mykboweeks.csv")
links <- links$url
all.results <- NA
all.schedule <- NA
for (i in links){
print(i)
url <- i
week <- substring(url, first = 38)
d <- read_html(url) %>% html_table() %>% as.data.frame() %>% select(-X2, -X4)
d <- d[2:(nrow(d)-1),]
d <- d %>% filter(str_detect(X1, "2020") == F)
d <- d %>% separate(X1, c("away1", "away2"))
d <- d %>% separate(X5, c("home1", "home2"))
d <- d %>% separate(X3, c("A.Score", "H.Score"))
d$Away <- paste(d$away1, d$away2)
d$Home <- paste(d$home1, d$home2)
d$week <- as.Date(week)
d$Year <- 2020
d$addday <- rep(0:6, each = 5, length.out = nrow(d))
d$Date <- as.Date(d$week + d$addday)
results <- d %>% filter(!str_detect(H.Score, "0am") & !str_detect(A.Score, "Canceled")) %>% select(Date, Home, Away, H.Score, A.Score, Year)
schedule <- d %>% filter(str_detect(H.Score, "0am")) %>% select(Home, Away, Date, Year)
all.results <- rbind(all.results, results)
if (nrow(schedule) > 0) {
all.schedule <- rbind(all.schedule, schedule)
}
}
all.results <- all.results[2:nrow(all.results),]
all.schedule <- all.schedule[2:nrow(all.schedule),]
View(all.results)
View(all.schedule)
library(blogdown)
library(rmarkdown)
library(tidyverse)
library(rvest)
library(elo)
library(scales)
setwd("~/Google Drive/KBO")
## Scrape 2020 Schedule and Results
links <- read_csv("mykboweeks.csv")
links <- links$url
all.results <- NA
all.schedule <- NA
for (i in links){
print(i)
url <- i
week <- substring(url, first = 38)
d <- read_html(url) %>% html_table() %>% as.data.frame() %>% select(-X2, -X4)
d <- d[2:(nrow(d)-1),]
d <- d %>% filter(str_detect(X1, "2020") == F)
d <- d %>% separate(X1, c("away1", "away2"))
d <- d %>% separate(X5, c("home1", "home2"))
d <- d %>% separate(X3, c("A.Score", "H.Score"))
d$Away <- paste(d$away1, d$away2)
d$Home <- paste(d$home1, d$home2)
d$week <- as.Date(week)
d$Year <- 2020
d$addday <- rep(0:6, each = 5, length.out = nrow(d))
d$Date <- as.Date(d$week + d$addday)
results <- d %>% filter(!str_detect(H.Score, "0am") & !str_detect(A.Score, "Canceled")) %>% select(Date, Home, Away, H.Score, A.Score, Year)
schedule <- d %>% filter(str_detect(H.Score, "0am")) %>% select(Home, Away, Date, Year)
all.results <- rbind(all.results, results)
if (nrow(schedule) > 0) {
all.schedule <- rbind(all.schedule, schedule)
}
}
all.results <- all.results[2:nrow(all.results),]
all.schedule <- all.schedule[2:nrow(all.schedule),]
## Tally Current Win Totals
all.results$H.Score <- as.numeric(all.results$H.Score)
all.results$A.Score <- as.numeric(all.results$A.Score)
all.results <- mutate(all.results, H.Win = ifelse(H.Score > A.Score, 1,
ifelse(H.Score == A.Score, .5, 0)))
all.results <- mutate(all.results, A.Win = ifelse(H.Score < A.Score, 1,
ifelse(H.Score == A.Score, .5, 0)))
h.wins <- all.results %>% select(Home, H.Win)
names(h.wins) <- c("Winner", "n")
a.wins <- all.results %>% select(Away, A.Win)
names(a.wins) <- c("Winner", "n")
wins <- rbind(h.wins,a.wins)
wins <- wins %>% group_by(Winner) %>% summarize(n = sum(n))
all.results <- all.results %>% select(-H.Win, -A.Win)
## Read In Historical Results
kbohistory <- read_csv("kboresults.csv")
kbohistory$Date <- ISOdate(kbohistory$Year, kbohistory$Month, kbohistory$Day)
kbohistory <- kbohistory %>% select(Date, Home, Away, H.Score, A.Score, Year)
all.history <- rbind(kbohistory, all.results)
all.history <- all.history[order(all.history$Date),]
all.history$H.Score <- as.double(all.history$H.Score)
all.history$A.Score <- as.double(all.history$A.Score)
## Run Elo
elo <- elo.run(score(H.Score, A.Score) ~ adjust(Home, 24) + Away + regress(Year, 1500, 0.5) + k(4*(abs(H.Score - A.Score)^(1/4))), data = all.history)
all.history$H.Elo <- elo[[1]][,7]
all.history$A.Elo <- elo[[1]][,8]
## Create Elo History Table
home <- all.history %>% select(Date, Home, H.Elo)
away <- all.history %>% select(Date, Away, A.Elo)
cols <- c("Date", "Team", "Elo")
colnames(home) <- cols
colnames(away) <- cols
elo.history <- rbind(home,away)
elo.history$Elo <- round(elo.history$Elo, digits = 0)
## Current Elos
current.elos <- elo.history %>%
group_by(Team) %>%
arrange(desc(Date)) %>%
slice(1) %>% select(-Date) %>%
arrange(desc(Elo))
current.elos$Rank <- 1:10
write_csv(current.elos, "currentelos.csv")
## Ten Team Era for History Page
tenteam <- elo.history %>% filter(Date > ISOdate(2013,1,1))
write_csv(tenteam,"elohistory.csv")
## Simulations
nsim <- 100000
all.schedule$Prediction <- predict(elo, newdata = all.schedule)
all.schedule <- data.frame(all.schedule, Round = rep(1:nsim, each = nrow(all.schedule)))
all.schedule$Sim <- runif((nrow(all.schedule)),0,1)
all.schedule <- mutate(all.schedule, H.Win = ifelse(Sim < Prediction, 1, 0))
all.schedule <- mutate(all.schedule, Winner = ifelse(H.Win == 1, as.character(Home), as.character(Away)))
standings <- all.schedule %>% group_by(Winner, Round) %>% count(wt = n())
standings <- standings %>% left_join(wins, by = "Winner")
standings$n.y[is.na(standings$n.y)] <- 0
standings$n <- standings$n.x + standings$n.y
standings$tiebreak <- runif((nrow(standings)),0,1)
standings <- standings %>% arrange(tiebreak) %>% arrange(desc(n)) %>% arrange(Round)
standings$Rank <- rep(1:10, max(standings$Round))
pred.1 <- standings %>% filter(Rank == 1) %>% group_by(Winner) %>% count(wt = n())
pred.1$Pct <- (pred.1$n/nsim)
colnames(pred.1) <- c("Winner", "n", "First")
pred.2 <- standings %>% filter(Rank == 2) %>% group_by(Winner) %>% count(wt = n())
pred.2$Pct <- (pred.2$n/nsim)
colnames(pred.2) <- c("Winner", "n", "Second")
pred.3 <- standings %>% filter(Rank == 3) %>% group_by(Winner) %>% count(wt = n())
pred.3$Pct <- (pred.3$n/nsim)
colnames(pred.3) <- c("Winner", "n", "Third")
pred.4 <- standings %>% filter(Rank == 4) %>% group_by(Winner) %>% count(wt = n())
pred.4$Pct <- (pred.4$n/nsim)
colnames(pred.4) <- c("Winner", "n", "Fourth")
pred.5 <- standings %>% filter(Rank == 5) %>% group_by(Winner) %>% count(wt = n())
pred.5$Pct <- (pred.5$n/nsim)
colnames(pred.5) <- c("Winner", "n", "Fifth")
pred.6 <- standings %>% filter(Rank > 5) %>% group_by(Winner) %>% count(wt = n())
pred.6$Pct <- (pred.6$n/nsim)
colnames(pred.6) <- c("Winner", "n", "Out")
predictions <- ungroup(as.data.frame(standings$Winner[1:10]))
colnames(predictions) <- "Winner"
predictions <- pred.1 %>% select(-n) %>% right_join(predictions, by = "Winner")
predictions <- pred.2 %>% select(-n) %>% right_join(predictions, by = "Winner")
predictions <- pred.3 %>% select(-n) %>% right_join(predictions, by = "Winner")
predictions <- pred.4 %>% select(-n) %>% right_join(predictions, by = "Winner")
predictions <- pred.5 %>% select(-n) %>% right_join(predictions, by = "Winner")
predictions <- pred.6 %>% select(-n) %>% right_join(predictions, by = "Winner")
predictions$Team <- predictions$Winner
predictions <- predictions %>% left_join(current.elos, by = "Team")
predictions <- predictions %>% ungroup() %>% select(-Winner)
predictions <- predictions %>%
mutate(First = percent(First, 1)) %>%
mutate(Second = percent(Second, 1)) %>%
mutate(Third = percent(Third, 1)) %>%
mutate(Fourth = percent(Fourth, 1)) %>%
mutate(Fifth = percent(Fifth, 1)) %>%
mutate(Out = percent(Out, 1))
predictions <- predictions %>% select(Rank, Team, Elo, First, Second, Third, Fourth, Fifth, Out)
predictions[is.na(predictions)] <- "0%"
write_csv(predictions, "predictions.csv")
## Render Elo Pages
render("~/Google Drive/KBO/kbofancystats/content/elo.Rmd")
render("~/Google Drive/KBO/kbofancystats/content/elo2020.Rmd")
render("~/Google Drive/KBO/kbofancystats/content/elohistory.Rmd")
setwd("~/Google Drive/KBO/kbofancystats")
#stop_server()
serve_site()
## Homepage image
setwd("~/Google Drive/KBO/kbofancystats/static/img")
tenteam <- read_csv("~/Google Drive/KBO/elohistory.csv")
tenteam <- tenteam %>% subset(Date > ISOdate(2020,5,4))
tenteam$Team <- as.factor(tenteam$Team)
rank <- read_csv("~/Google Drive/KBO/currentelos.csv")
rank$Team2 <- paste0(rank$Team, " (",rank$Elo,")")
levels <- rank$Team2
tenteam <- tenteam %>% left_join(rank, by = "Team")
tenteam$Team2 <- as.factor(tenteam$Team2)
tenteam$Team2 <- factor(tenteam$Team2, levels = levels)
plot <- ggplot() + geom_line(data = tenteam, aes(Date, Elo.x, color = Team2)) + theme_minimal() + labs(x = "", y = "Elo", color = "")
ggsave("elo.png", width = 8, height = 3)
